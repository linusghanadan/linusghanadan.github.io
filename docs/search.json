[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog",
    "section": "",
    "text": "Time series analysis of nutrient pollution in Chesapeake Bay tidal regions\n\n\n\n\n\n\n\nStatistical Analysis\n\n\nWater Pollution\n\n\nR\n\n\n\n\nThis analysis seeks to better understand the seasonality of nitrogen and phosphorus concentration in Chesapeake Bay tidal regions, in addition to any non-seasonal trends since 2010.\n\n\n\n\n\n\nDec 12, 2023\n\n\nLinus Ghanadan\n\n\n\n\n\n\n  \n\n\n\n\nReproducible workflow to gauge suitability of species for U.S. West Coast marine aquaculture\n\n\n\n\n\n\n\nGeospatial Analysis\n\n\nAquaculture\n\n\nR\n\n\n\n\nThis analysis starts by assessing the suitability of oyster aquaculture in Exclusive Economic Zones adjacent to the U.S. West Coast. Then, I create a generalized model that provides total and percent area of suitability for any species based on input ranges of suitable temperature and depth.\n\n\n\n\n\n\nDec 12, 2023\n\n\nLinus Ghanadan\n\n\n\n\n\n\n  \n\n\n\n\nLand cover analysis around Mount Whitney\n\n\n\n\n\n\n\nGeospatial Analysis\n\n\nLand Cover Analysis\n\n\nPython\n\n\n\n\nThis analysis uses Python to extract land cover statistics from a USGS raster dataset on land cover classification in the area surrounding Mount Whitney in California.\n\n\n\n\n\n\nDec 11, 2023\n\n\nLinus Ghanadan\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Linus Ghanadan",
    "section": "",
    "text": "Bio\nI’m currently pursuing a Master’s degree in Environmental Data Science from the Bren School of Environmental Science & Management at the University of California, Santa Barbara. I finished my undergraduate studies in 2023, receiving a Bachelor of Science in Environmental Science & Policy from the University of Maryland. While at UMD, I also gained experiences working with the U.S. Department of Transportation, World Resources Institute, and The Nature Conservancy. Moving forward, my career goal is to implement data-driven solutions that advance sustainability within the public and private sectors."
  },
  {
    "objectID": "blog/2023-10-23-my-first-post/index.html",
    "href": "blog/2023-10-23-my-first-post/index.html",
    "title": "My first blog post",
    "section": "",
    "text": "Interesting insights here.1\nI want to cite something here (Csik 2022).\nI’m citing another resources here(Liu et al. 2023)."
  },
  {
    "objectID": "blog/2023-10-23-my-first-post/index.html#first-section",
    "href": "blog/2023-10-23-my-first-post/index.html#first-section",
    "title": "My first blog post",
    "section": "",
    "text": "Interesting insights here.1\nI want to cite something here (Csik 2022).\nI’m citing another resources here(Liu et al. 2023)."
  },
  {
    "objectID": "blog/2023-10-23-my-first-post/index.html#second-section",
    "href": "blog/2023-10-23-my-first-post/index.html#second-section",
    "title": "My first blog post",
    "section": "Second section",
    "text": "Second section\nIn conclusion, this is a blog.2"
  },
  {
    "objectID": "blog/2023-10-23-my-first-post/index.html#footnotes",
    "href": "blog/2023-10-23-my-first-post/index.html#footnotes",
    "title": "My first blog post",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nThis is a footnote↩︎\nThis is another footnote↩︎"
  },
  {
    "objectID": "STAC-search.html",
    "href": "STAC-search.html",
    "title": "Access",
    "section": "",
    "text": "import numpy as np\nimport geopandas as gpd\nimport rioxarray as rioxr\nimport matplotlib.pyplot as plt\n\nfrom shapely.geometry import Polygon\n\n# used to access STAC catalogs\nfrom pystac_client import Client\n# used to sign items from the MPC STAC catalog\nimport planetary_computer\n\n# other libraries for nice outputs\nfrom IPython.display import Image\nWe use the Client function from the pystac_client package to access the catalog:\n# access catalog\ncatalog = Client.open(\n    \"https://planetarycomputer.microsoft.com/api/stac/v1\",\n    modifier = planetary_computer.sign_inplace)\nThe modifier parameter is needed to access the data in the MPC catalog."
  },
  {
    "objectID": "STAC-search.html#exploration",
    "href": "STAC-search.html#exploration",
    "title": "Access",
    "section": "Exploration",
    "text": "Exploration\nLet’s check out some of the catalog’s metadata:\n\n# metadata from the catalog\nprint('Title: ', catalog.title)\nprint('Description: ', catalog.description)\n\nTitle:  Microsoft Planetary Computer STAC API\nDescription:  Searchable spatiotemporal metadata describing Earth science datasets hosted by the Microsoft Planetary Computer\n\n\nWe can access the catalog’s collections by using the get_collections() method:\n\ncatalog.get_collections()\n\n&lt;generator object Client.get_collections at 0x16765edf0&gt;\n\n\nNotice the output of get_collections() is a generator.\nThis is a special kind of lazy obkect in Python over which you can loop over like a list. Unlike a list, the items in the generator do not exist in memory until you explicitely iterate over them or convert them to a list. Let’s try getting the collections from the catalog again:\n\n# get collections and print their names\ncollections = list(catalog.get_collections())\n\nprint('Number of collections: ', len(collections))\nprint('Collections IDs:')\n\nfor collection in collections:\n    print('- ', collection.id)\n\nNumber of collections:  122\nCollections IDs:\n-  daymet-annual-pr\n-  daymet-daily-hi\n-  3dep-seamless\n-  3dep-lidar-dsm\n-  fia\n-  sentinel-1-rtc\n-  gridmet\n-  daymet-annual-na\n-  daymet-monthly-na\n-  daymet-annual-hi\n-  daymet-monthly-hi\n-  daymet-monthly-pr\n-  gnatsgo-tables\n-  hgb\n-  cop-dem-glo-30\n-  cop-dem-glo-90\n-  goes-cmi\n-  terraclimate\n-  nasa-nex-gddp-cmip6\n-  gpm-imerg-hhr\n-  gnatsgo-rasters\n-  3dep-lidar-hag\n-  3dep-lidar-intensity\n-  3dep-lidar-pointsourceid\n-  mtbs\n-  noaa-c-cap\n-  3dep-lidar-copc\n-  modis-64A1-061\n-  alos-fnf-mosaic\n-  3dep-lidar-returns\n-  mobi\n-  landsat-c2-l2\n-  era5-pds\n-  chloris-biomass\n-  kaza-hydroforecast\n-  planet-nicfi-analytic\n-  modis-17A2H-061\n-  modis-11A2-061\n-  daymet-daily-pr\n-  3dep-lidar-dtm-native\n-  3dep-lidar-classification\n-  3dep-lidar-dtm\n-  gap\n-  modis-17A2HGF-061\n-  planet-nicfi-visual\n-  gbif\n-  modis-17A3HGF-061\n-  modis-09A1-061\n-  alos-dem\n-  alos-palsar-mosaic\n-  deltares-water-availability\n-  modis-16A3GF-061\n-  modis-21A2-061\n-  us-census\n-  jrc-gsw\n-  deltares-floods\n-  modis-43A4-061\n-  modis-09Q1-061\n-  modis-14A1-061\n-  hrea\n-  modis-13Q1-061\n-  modis-14A2-061\n-  sentinel-2-l2a\n-  modis-15A2H-061\n-  modis-11A1-061\n-  modis-15A3H-061\n-  modis-13A1-061\n-  daymet-daily-na\n-  nrcan-landcover\n-  modis-10A2-061\n-  ecmwf-forecast\n-  noaa-mrms-qpe-24h-pass2\n-  sentinel-1-grd\n-  nasadem\n-  io-lulc\n-  landsat-c2-l1\n-  drcog-lulc\n-  chesapeake-lc-7\n-  chesapeake-lc-13\n-  chesapeake-lu\n-  noaa-mrms-qpe-1h-pass1\n-  noaa-mrms-qpe-1h-pass2\n-  noaa-nclimgrid-monthly\n-  goes-glm\n-  usda-cdl\n-  eclipse\n-  esa-cci-lc\n-  esa-cci-lc-netcdf\n-  fws-nwi\n-  usgs-lcmap-conus-v13\n-  usgs-lcmap-hawaii-v10\n-  noaa-climate-normals-tabular\n-  noaa-climate-normals-netcdf\n-  noaa-climate-normals-gridded\n-  aster-l1t\n-  cil-gdpcir-cc-by-sa\n-  io-lulc-9-class\n-  io-biodiversity\n-  naip\n-  noaa-cdr-sea-surface-temperature-whoi\n-  noaa-cdr-ocean-heat-content\n-  cil-gdpcir-cc0\n-  cil-gdpcir-cc-by\n-  noaa-cdr-sea-surface-temperature-whoi-netcdf\n-  noaa-cdr-sea-surface-temperature-optimum-interpolation\n-  modis-10A1-061\n-  sentinel-5p-l2-netcdf\n-  sentinel-3-olci-wfr-l2-netcdf\n-  noaa-cdr-ocean-heat-content-netcdf\n-  sentinel-3-synergy-aod-l2-netcdf\n-  sentinel-3-synergy-v10-l2-netcdf\n-  sentinel-3-olci-lfr-l2-netcdf\n-  sentinel-3-sral-lan-l2-netcdf\n-  sentinel-3-slstr-lst-l2-netcdf\n-  sentinel-3-slstr-wst-l2-netcdf\n-  sentinel-3-sral-wat-l2-netcdf\n-  ms-buildings\n-  sentinel-3-slstr-frp-l2-netcdf\n-  sentinel-3-synergy-syn-l2-netcdf\n-  sentinel-3-synergy-vgp-l2-netcdf\n-  sentinel-3-synergy-vg1-l2-netcdf\n-  esa-worldcover"
  },
  {
    "objectID": "STAC-search.html#collection",
    "href": "STAC-search.html#collection",
    "title": "Access",
    "section": "Collection",
    "text": "Collection\nWe can select a single collection for exploration using the get_child() method for the catalog and the collection id as the parameter:\n\nnaip_collection = catalog.get_child('naip')\nnaip_collection\n\n\n\n\n\n\n    \n        \n            \n                \n                    \n        \n            type\n            \"Collection\"\n        \n    \n                \n            \n                \n                    \n        \n            id\n            \"naip\"\n        \n    \n                \n            \n                \n                    \n        \n            stac_version\n            \"1.0.0\"\n        \n    \n                \n            \n                \n                    \n        \n            description\n            \"The [National Agriculture Imagery Program](https://www.fsa.usda.gov/programs-and-services/aerial-photography/imagery-programs/naip-imagery/) (NAIP) provides U.S.-wide, high-resolution aerial imagery, with four spectral bands (R, G, B, IR).  NAIP is administered by the [Aerial Field Photography Office](https://www.fsa.usda.gov/programs-and-services/aerial-photography/) (AFPO) within the [US Department of Agriculture](https://www.usda.gov/) (USDA).  Data are captured at least once every three years for each state.  This dataset represents NAIP data from 2010-present, in [cloud-optimized GeoTIFF](https://www.cogeo.org/) format.\n\"\n        \n    \n                \n            \n                \n                    \n        \n            links\n            [] 6 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            rel\n            \"items\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/naip/items\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/geo+json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            rel\n            \"root\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Microsoft Planetary Computer STAC API\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            rel\n            \"license\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://www.fsa.usda.gov/help/policies-and-links/\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Public Domain\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            rel\n            \"describedby\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/dataset/naip\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"text/html\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Human readable dataset overview and reference\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            \n        \n            \n                \n        \n            rel\n            \"self\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/naip\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            5\n            \n        \n            \n                \n        \n            rel\n            \"parent\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Microsoft Planetary Computer STAC API\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            stac_extensions\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"https://stac-extensions.github.io/item-assets/v1.0.0/schema.json\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"https://stac-extensions.github.io/table/v1.2.0/schema.json\"\n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            item_assets\n            \n        \n            \n                \n        \n            image\n            \n        \n            \n                \n        \n            type\n            \"image/tiff; application=geotiff; profile=cloud-optimized\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"data\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            title\n            \"RGBIR COG tile\"\n        \n    \n            \n        \n            \n                \n        \n            eo:bands\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            name\n            \"Red\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"red\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            name\n            \"Green\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"green\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            name\n            \"Blue\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"blue\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            name\n            \"NIR\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"nir\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"near-infrared\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            metadata\n            \n        \n            \n                \n        \n            type\n            \"text/plain\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"metadata\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            title\n            \"FGDC Metdata\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            thumbnail\n            \n        \n            \n                \n        \n            type\n            \"image/jpeg\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"thumbnail\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Thumbnail\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            msft:region\n            \"westeurope\"\n        \n    \n                \n            \n                \n                    \n        \n            msft:container\n            \"naip\"\n        \n    \n                \n            \n                \n                    \n        \n            msft:storage_account\n            \"naipeuwest\"\n        \n    \n                \n            \n                \n                    \n        \n            msft:short_description\n            \"NAIP provides US-wide, high-resolution aerial imagery.  This dataset includes NAIP images from 2010 to the present.\"\n        \n    \n                \n            \n                \n                    \n        \n            title\n            \"NAIP: National Agriculture Imagery Program\"\n        \n    \n                \n            \n                \n                    \n        \n            extent\n            \n        \n            \n                \n        \n            spatial\n            \n        \n            \n                \n        \n            bbox\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -124.784\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            24.744\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            -66.951\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            49.346\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            temporal\n            \n        \n            \n                \n        \n            interval\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"2010-01-01T00:00:00Z\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"2021-12-31T00:00:00Z\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            license\n            \"proprietary\"\n        \n    \n                \n            \n                \n                    \n        \n            keywords\n            [] 7 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"NAIP\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"Aerial\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \"Imagery\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \"USDA\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            \"AFPO\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            5\n            \"Agriculture\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            6\n            \"United States\"\n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            providers\n            [] 3 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            name\n            \"USDA Farm Service Agency\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"producer\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"licensor\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            url\n            \"https://www.fsa.usda.gov/programs-and-services/aerial-photography/imagery-programs/naip-imagery/\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            name\n            \"Esri\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"processor\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            url\n            \"https://www.esri.com/\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            name\n            \"Microsoft\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"host\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"processor\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            url\n            \"https://planetarycomputer.microsoft.com\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            summaries\n            \n        \n            \n                \n        \n            gsd\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            0.6\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            1.0\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            eo:bands\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            name\n            \"Red\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"red\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"visible red\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            name\n            \"Green\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"green\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"visible green\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            name\n            \"Blue\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"blue\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"visible blue\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            name\n            \"NIR\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"nir\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"near-infrared\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            assets\n            \n        \n            \n                \n        \n            thumbnail\n            \n        \n            \n                \n        \n            href\n            \"https://ai4edatasetspublicassets.blob.core.windows.net/assets/pc_thumbnails/naip.png\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/png\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"NAIP thumbnail\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"thumbnail\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            geoparquet-items\n            \n        \n            \n                \n        \n            href\n            \"abfs://items/naip.parquet\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/x-parquet\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"GeoParquet STAC items\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"Snapshot of the collection's STAC items exported to GeoParquet format.\"\n        \n    \n            \n        \n            \n                \n        \n            msft:partition_info\n            \n        \n            \n                \n        \n            is_partitioned\n            True\n        \n    \n            \n        \n            \n                \n        \n            partition_frequency\n            \"AS\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            table:storage_options\n            \n        \n            \n                \n        \n            account_name\n            \"pcstacitems\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"stac-items\""
  },
  {
    "objectID": "STAC-search.html#catalog-search",
    "href": "STAC-search.html#catalog-search",
    "title": "Access",
    "section": "Catalog search",
    "text": "Catalog search\nWe can narrow the search within the catalog by specifying a time range, an area of interest, and the collection name. The simplest way to define the are of interest to look for in the catalog are:\n\na GeoJSON-type dictionary with coordinates of the bounding box\nas a list [xmin, ymin, xmax, ymax] with the coordinate values definind the four corners of the bounding box.\n\nYou could also use a point, or some more complex polygon.\nIn this lesson we will look for NAIP scenes over Santa Barbara from 2018 to 2020. We’ll use the GeoJSON method: to define the area of interest:\n\n# temporal range of interest\n# CHECK: how to get open/close time ranges\ntime_range = \"2018-01-01/2023-01-01\"\n\n# NCEAS bounding box (as a GeoJSON)\n# NCEAS bounding box (as a GeoJSON)\nbbox = {\n    \"type\": \"Polygon\",\n    \"coordinates\":[\n        [\n            [-119.70608227128903, 34.426300194372274],\n            [-119.70608227128903, 34.42041139020533],\n            [-119.6967885126002, 34.42041139020533],\n            [-119.6967885126002, 34.426300194372274],\n            [-119.70608227128903, 34.426300194372274]\n        ]\n    ]\n}\n\n# catalog search\nsearch = catalog.search(\n    collections = ['naip'], # list with collection id\n    intersects = bbox,\n    datetime=time_range\n) \nsearch\n\n&lt;pystac_client.item_search.ItemSearch at 0x1680d6810&gt;\n\n\nTo get the items found in the search (or check if there were any matches in the search) we use the item_collection() method:\n\nitems = search.item_collection()\n\n# number of items in search\nlen(items)\n\n2\n\n\n\nitems\n\n\n\n\n\n    \n        \n            \n                \n                    \n        \n            type\n            \"FeatureCollection\"\n        \n    \n                \n            \n                \n                    \n        \n            features\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            type\n            \"Feature\"\n        \n    \n            \n        \n            \n                \n        \n            stac_version\n            \"1.0.0\"\n        \n    \n            \n        \n            \n                \n        \n            id\n            \"ca_m_3411935_sw_11_060_20200521\"\n        \n    \n            \n        \n            \n                \n        \n            properties\n            \n        \n            \n                \n        \n            gsd\n            0.6\n        \n    \n            \n        \n            \n                \n        \n            datetime\n            \"2020-05-21T00:00:00Z\"\n        \n    \n            \n        \n            \n                \n        \n            naip:year\n            \"2020\"\n        \n    \n            \n        \n            \n                \n        \n            proj:bbox\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            246930.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            3806808.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            253260.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            3814296.0\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            proj:epsg\n            26911\n        \n    \n            \n        \n            \n                \n        \n            naip:state\n            \"ca\"\n        \n    \n            \n        \n            \n                \n        \n            proj:shape\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            12480\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            10550\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            proj:transform\n            [] 9 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            0.6\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            246930.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            -0.6\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            5\n            3814296.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            6\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            7\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            8\n            1.0\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            geometry\n            \n        \n            \n                \n        \n            type\n            \"Polygon\"\n        \n    \n            \n        \n            \n                \n        \n            coordinates\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 5 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -119.683292\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.373269\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -119.685448\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.440724\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -119.754272\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.439192\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -119.752061\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.371741\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -119.683292\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.373269\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            links\n            [] 5 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            rel\n            \"collection\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/naip\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            rel\n            \"parent\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/naip\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            rel\n            \"root\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Microsoft Planetary Computer STAC API\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            rel\n            \"self\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/naip/items/ca_m_3411935_sw_11_060_20200521\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/geo+json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            \n        \n            \n                \n        \n            rel\n            \"preview\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/map?collection=naip&item=ca_m_3411935_sw_11_060_20200521\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"text/html\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Map of item\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            assets\n            \n        \n            \n                \n        \n            image\n            \n        \n            \n                \n        \n            href\n            \"https://naipeuwest.blob.core.windows.net/naip/v002/ca/2020/ca_060cm_2020/34119/m_3411935_sw_11_060_20200521.tif?st=2023-11-28T05%3A48%3A51Z&se=2023-11-29T06%3A33%3A51Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-11-28T18%3A08%3A50Z&ske=2023-12-05T18%3A08%3A50Z&sks=b&skv=2021-06-08&sig=nP0oBdGTDhtG1t5h6ZgijAUbeAOX1x0QDgtunpDgI1E%3D\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/tiff; application=geotiff; profile=cloud-optimized\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"RGBIR COG tile\"\n        \n    \n            \n        \n            \n                \n        \n            eo:bands\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            name\n            \"Red\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"red\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            name\n            \"Green\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"green\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            name\n            \"Blue\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"blue\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            name\n            \"NIR\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"nir\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"near-infrared\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"data\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            thumbnail\n            \n        \n            \n                \n        \n            href\n            \"https://naipeuwest.blob.core.windows.net/naip/v002/ca/2020/ca_060cm_2020/34119/m_3411935_sw_11_060_20200521.200.jpg?st=2023-11-28T05%3A48%3A51Z&se=2023-11-29T06%3A33%3A51Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-11-28T18%3A08%3A50Z&ske=2023-12-05T18%3A08%3A50Z&sks=b&skv=2021-06-08&sig=nP0oBdGTDhtG1t5h6ZgijAUbeAOX1x0QDgtunpDgI1E%3D\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/jpeg\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Thumbnail\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"thumbnail\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            tilejson\n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/tilejson.json?collection=naip&item=ca_m_3411935_sw_11_060_20200521&assets=image&asset_bidx=image%7C1%2C2%2C3&format=png\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"TileJSON with default rendering\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"tiles\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            rendered_preview\n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/preview.png?collection=naip&item=ca_m_3411935_sw_11_060_20200521&assets=image&asset_bidx=image%7C1%2C2%2C3&format=png\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/png\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Rendered preview\"\n        \n    \n            \n        \n            \n                \n        \n            rel\n            \"preview\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"overview\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            bbox\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -119.754272\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.371741\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            -119.683292\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            34.440724\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            stac_extensions\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"https://stac-extensions.github.io/eo/v1.0.0/schema.json\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"https://stac-extensions.github.io/projection/v1.0.0/schema.json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            collection\n            \"naip\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            type\n            \"Feature\"\n        \n    \n            \n        \n            \n                \n        \n            stac_version\n            \"1.0.0\"\n        \n    \n            \n        \n            \n                \n        \n            id\n            \"ca_m_3411935_sw_11_060_20180724_20190209\"\n        \n    \n            \n        \n            \n                \n        \n            properties\n            \n        \n            \n                \n        \n            gsd\n            0.6\n        \n    \n            \n        \n            \n                \n        \n            datetime\n            \"2018-07-24T00:00:00Z\"\n        \n    \n            \n        \n            \n                \n        \n            naip:year\n            \"2018\"\n        \n    \n            \n        \n            \n                \n        \n            proj:bbox\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            246978.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            3806856.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            253212.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            3814248.0\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            proj:epsg\n            26911\n        \n    \n            \n        \n            \n                \n        \n            naip:state\n            \"ca\"\n        \n    \n            \n        \n            \n                \n        \n            proj:shape\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            12320\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            10390\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            proj:transform\n            [] 9 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            0.6\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            246978.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            -0.6\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            5\n            3814248.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            6\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            7\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            8\n            1.0\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            geometry\n            \n        \n            \n                \n        \n            type\n            \"Polygon\"\n        \n    \n            \n        \n            \n                \n        \n            coordinates\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 5 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -119.683827\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.37369\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -119.685956\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.44028\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -119.753736\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.438772\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -119.751554\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.372185\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -119.683827\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.37369\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            links\n            [] 5 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            rel\n            \"collection\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/naip\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            rel\n            \"parent\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/naip\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            rel\n            \"root\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Microsoft Planetary Computer STAC API\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            rel\n            \"self\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/naip/items/ca_m_3411935_sw_11_060_20180724_20190209\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/geo+json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            \n        \n            \n                \n        \n            rel\n            \"preview\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/map?collection=naip&item=ca_m_3411935_sw_11_060_20180724_20190209\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"text/html\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Map of item\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            assets\n            \n        \n            \n                \n        \n            image\n            \n        \n            \n                \n        \n            href\n            \"https://naipeuwest.blob.core.windows.net/naip/v002/ca/2018/ca_060cm_2018/34119/m_3411935_sw_11_060_20180724_20190209.tif?st=2023-11-28T05%3A48%3A51Z&se=2023-11-29T06%3A33%3A51Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-11-28T18%3A08%3A50Z&ske=2023-12-05T18%3A08%3A50Z&sks=b&skv=2021-06-08&sig=nP0oBdGTDhtG1t5h6ZgijAUbeAOX1x0QDgtunpDgI1E%3D\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/tiff; application=geotiff; profile=cloud-optimized\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"RGBIR COG tile\"\n        \n    \n            \n        \n            \n                \n        \n            eo:bands\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            name\n            \"Red\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"red\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            name\n            \"Green\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"green\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            name\n            \"Blue\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"blue\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            name\n            \"NIR\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"nir\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"near-infrared\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"data\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            metadata\n            \n        \n            \n                \n        \n            href\n            \"https://naipeuwest.blob.core.windows.net/naip/v002/ca/2018/ca_fgdc_2018/34119/m_3411935_sw_11_060_20180724.txt?st=2023-11-28T05%3A48%3A51Z&se=2023-11-29T06%3A33%3A51Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-11-28T18%3A08%3A50Z&ske=2023-12-05T18%3A08%3A50Z&sks=b&skv=2021-06-08&sig=nP0oBdGTDhtG1t5h6ZgijAUbeAOX1x0QDgtunpDgI1E%3D\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"text/plain\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"FGDC Metdata\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"metadata\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            thumbnail\n            \n        \n            \n                \n        \n            href\n            \"https://naipeuwest.blob.core.windows.net/naip/v002/ca/2018/ca_060cm_2018/34119/m_3411935_sw_11_060_20180724_20190209.200.jpg?st=2023-11-28T05%3A48%3A51Z&se=2023-11-29T06%3A33%3A51Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-11-28T18%3A08%3A50Z&ske=2023-12-05T18%3A08%3A50Z&sks=b&skv=2021-06-08&sig=nP0oBdGTDhtG1t5h6ZgijAUbeAOX1x0QDgtunpDgI1E%3D\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/jpeg\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Thumbnail\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"thumbnail\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            tilejson\n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/tilejson.json?collection=naip&item=ca_m_3411935_sw_11_060_20180724_20190209&assets=image&asset_bidx=image%7C1%2C2%2C3&format=png\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"TileJSON with default rendering\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"tiles\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            rendered_preview\n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/preview.png?collection=naip&item=ca_m_3411935_sw_11_060_20180724_20190209&assets=image&asset_bidx=image%7C1%2C2%2C3&format=png\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/png\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Rendered preview\"\n        \n    \n            \n        \n            \n                \n        \n            rel\n            \"preview\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"overview\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            bbox\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -119.753736\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.372185\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            -119.683827\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            34.44028\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            stac_extensions\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"https://stac-extensions.github.io/eo/v1.0.0/schema.json\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"https://stac-extensions.github.io/projection/v1.0.0/schema.json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            collection\n            \"naip\""
  },
  {
    "objectID": "STAC-search.html#item",
    "href": "STAC-search.html#item",
    "title": "Access",
    "section": "Item",
    "text": "Item\nLet’s get the first item in the search\n\n# get first item in the catalog search\nitem = items[0]\ntype(item)\n\npystac.item.Item\n\n\nRemember the STAC item is the core object in the catalog.\nThe item does not contain the data itslef, but rather metadata about it and links to access the actual data (assets). Some of the metadta:\n\nprint('id', item.id)\nitem.properties\n\nid ca_m_3411935_sw_11_060_20200521\n\n\n{'gsd': 0.6,\n 'datetime': '2020-05-21T00:00:00Z',\n 'naip:year': '2020',\n 'proj:bbox': [246930.0, 3806808.0, 253260.0, 3814296.0],\n 'proj:epsg': 26911,\n 'naip:state': 'ca',\n 'proj:shape': [12480, 10550],\n 'proj:transform': [0.6, 0.0, 246930.0, 0.0, -0.6, 3814296.0, 0.0, 0.0, 1.0]}\n\n\nJust as the item properties, the item assets are given in a dictionary, with each vlaue being a pystac.asset. Let’s check the assets in the item:\n\nitem.assets\n\n{'image': &lt;Asset href=https://naipeuwest.blob.core.windows.net/naip/v002/ca/2020/ca_060cm_2020/34119/m_3411935_sw_11_060_20200521.tif?st=2023-11-28T05%3A48%3A51Z&se=2023-11-29T06%3A33%3A51Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-11-28T18%3A08%3A50Z&ske=2023-12-05T18%3A08%3A50Z&sks=b&skv=2021-06-08&sig=nP0oBdGTDhtG1t5h6ZgijAUbeAOX1x0QDgtunpDgI1E%3D&gt;,\n 'thumbnail': &lt;Asset href=https://naipeuwest.blob.core.windows.net/naip/v002/ca/2020/ca_060cm_2020/34119/m_3411935_sw_11_060_20200521.200.jpg?st=2023-11-28T05%3A48%3A51Z&se=2023-11-29T06%3A33%3A51Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-11-28T18%3A08%3A50Z&ske=2023-12-05T18%3A08%3A50Z&sks=b&skv=2021-06-08&sig=nP0oBdGTDhtG1t5h6ZgijAUbeAOX1x0QDgtunpDgI1E%3D&gt;,\n 'tilejson': &lt;Asset href=https://planetarycomputer.microsoft.com/api/data/v1/item/tilejson.json?collection=naip&item=ca_m_3411935_sw_11_060_20200521&assets=image&asset_bidx=image%7C1%2C2%2C3&format=png&gt;,\n 'rendered_preview': &lt;Asset href=https://planetarycomputer.microsoft.com/api/data/v1/item/preview.png?collection=naip&item=ca_m_3411935_sw_11_060_20200521&assets=image&asset_bidx=image%7C1%2C2%2C3&format=png&gt;}\n\n\n\nfor key in item.assets.keys():\n    print(key, '--', item.assets[key].title)\n\nimage -- RGBIR COG tile\nthumbnail -- Thumbnail\ntilejson -- TileJSON with default rendering\nrendered_preview -- Rendered preview\n\n\nNotice each asset has an href, which is a link to the asset object (i.e. the data). For example, we can use the URL for the rendered preview asset to plot it:\n\nImage(url=item.assets['rendered_preview'].href, width=500)"
  },
  {
    "objectID": "STAC-search.html#load-data",
    "href": "STAC-search.html#load-data",
    "title": "Access",
    "section": "Load data",
    "text": "Load data\nThe raster data in our current item is in the image asset. Again, we access this data via its URL. This time we open it using rioxr.open_rasterio() directly:\n\nsb = rioxr.open_rasterio(item.assets['image'].href)\nsb\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.DataArray (band: 4, y: 12480, x: 10550)&gt;\n[526656000 values with dtype=uint8]\nCoordinates:\n  * band         (band) int64 1 2 3 4\n  * x            (x) float64 2.469e+05 2.469e+05 ... 2.533e+05 2.533e+05\n  * y            (y) float64 3.814e+06 3.814e+06 ... 3.807e+06 3.807e+06\n    spatial_ref  int64 0\nAttributes:\n    AREA_OR_POINT:             Area\n    TIFFTAG_IMAGEDESCRIPTION:  OrthoVista\n    TIFFTAG_RESOLUTIONUNIT:    1 (unitless)\n    TIFFTAG_SOFTWARE:          Trimble Germany GmbH\n    TIFFTAG_XRESOLUTION:       1\n    TIFFTAG_YRESOLUTION:       1\n    _FillValue:                0\n    scale_factor:              1.0\n    add_offset:                0.0xarray.DataArrayband: 4y: 12480x: 10550...[526656000 values with dtype=uint8]Coordinates: (4)band(band)int641 2 3 4array([1, 2, 3, 4])x(x)float642.469e+05 2.469e+05 ... 2.533e+05array([246930.3, 246930.9, 246931.5, ..., 253258.5, 253259.1, 253259.7])y(y)float643.814e+06 3.814e+06 ... 3.807e+06array([3814295.7, 3814295.1, 3814294.5, ..., 3806809.5, 3806808.9, 3806808.3])spatial_ref()int640crs_wkt :PROJCS[\"NAD83 / UTM zone 11N\",GEOGCS[\"NAD83\",DATUM[\"North_American_Datum_1983\",SPHEROID[\"GRS 1980\",6378137,298.257222101,AUTHORITY[\"EPSG\",\"7019\"]],AUTHORITY[\"EPSG\",\"6269\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4269\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",-117],PARAMETER[\"scale_factor\",0.9996],PARAMETER[\"false_easting\",500000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"26911\"]]semi_major_axis :6378137.0semi_minor_axis :6356752.314140356inverse_flattening :298.257222101reference_ellipsoid_name :GRS 1980longitude_of_prime_meridian :0.0prime_meridian_name :Greenwichgeographic_crs_name :NAD83horizontal_datum_name :North American Datum 1983projected_crs_name :NAD83 / UTM zone 11Ngrid_mapping_name :transverse_mercatorlatitude_of_projection_origin :0.0longitude_of_central_meridian :-117.0false_easting :500000.0false_northing :0.0scale_factor_at_central_meridian :0.9996spatial_ref :PROJCS[\"NAD83 / UTM zone 11N\",GEOGCS[\"NAD83\",DATUM[\"North_American_Datum_1983\",SPHEROID[\"GRS 1980\",6378137,298.257222101,AUTHORITY[\"EPSG\",\"7019\"]],AUTHORITY[\"EPSG\",\"6269\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4269\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",-117],PARAMETER[\"scale_factor\",0.9996],PARAMETER[\"false_easting\",500000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"26911\"]]GeoTransform :246930.0 0.6 0.0 3814296.0 0.0 -0.6array(0)Indexes: (3)bandPandasIndexPandasIndex(Index([1, 2, 3, 4], dtype='int64', name='band'))xPandasIndexPandasIndex(Index([          246930.3,           246930.9,           246931.5,\n       246932.09999999998, 246932.69999999998,           246933.3,\n                 246933.9,           246934.5, 246935.09999999998,\n       246935.69999999998,\n       ...\n                 253254.3,           253254.9,           253255.5,\n       253256.09999999998, 253256.69999999998,           253257.3,\n                 253257.9,           253258.5, 253259.09999999998,\n       253259.69999999998],\n      dtype='float64', name='x', length=10550))yPandasIndexPandasIndex(Index([         3814295.7,          3814295.1,          3814294.5,\n       3814293.9000000004, 3814293.3000000003,          3814292.7,\n                3814292.1,          3814291.5, 3814290.9000000004,\n       3814290.3000000003,\n       ...\n                3806813.7,          3806813.1,          3806812.5,\n       3806811.9000000004, 3806811.3000000003,          3806810.7,\n                3806810.1,          3806809.5, 3806808.9000000004,\n       3806808.3000000003],\n      dtype='float64', name='y', length=12480))Attributes: (9)AREA_OR_POINT :AreaTIFFTAG_IMAGEDESCRIPTION :OrthoVistaTIFFTAG_RESOLUTIONUNIT :1 (unitless)TIFFTAG_SOFTWARE :Trimble Germany GmbHTIFFTAG_XRESOLUTION :1TIFFTAG_YRESOLUTION :1_FillValue :0scale_factor :1.0add_offset :0.0\n\n\n\n# plot raster with correct ratio\nsize = 6 # height in in of plot\naspect = sb.rio.width/sb.rio.height\nsb.sel(band=[1,2,3]).plot.imshow(size=size)#, aspect=aspect)\n\n&lt;matplotlib.image.AxesImage at 0x16784e250&gt;"
  },
  {
    "objectID": "STAC-search.html#exercise",
    "href": "STAC-search.html#exercise",
    "title": "Access",
    "section": "Exercise",
    "text": "Exercise\nThe ‘cop-dem-glo-90’ (id of collection) collection contains the Copernicus DEM at 90m resolution (the one we used for Grand Canyon).\n\nUse the bbox for Santa Barbara to look for items in this collection/\nGet the first item in the search and check its assets.\nPlot the item’s rendered preview asset\nOpen the item’s data using rioxarray.\n\n\n# catalog search\n\nsearch = catalog.search(\ncollections = ['cop-dem-glo-90'],\nintersects = bbox)\n\nsearch\n\n&lt;pystac_client.item_search.ItemSearch at 0x1677d43d0&gt;\n\n\n\nsb_items = search.item_collection()\n\n# number of items in search \nlen(sb_items)\n\n1\n\n\n\n# first item in catalog\nsb_item = sb_items[0]\ntype(sb_item)\n\npystac.item.Item\n\n\n\nsb_item.assets\n\n{'data': &lt;Asset href=https://elevationeuwest.blob.core.windows.net/copernicus-dem/COP90_hh/Copernicus_DSM_COG_30_N34_00_W120_00_DEM.tif?st=2023-11-28T05%3A50%3A18Z&se=2023-11-29T06%3A35%3A18Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-11-29T00%3A21%3A36Z&ske=2023-12-06T00%3A21%3A36Z&sks=b&skv=2021-06-08&sig=8YM0NGC%2BhTB%2BFH2E4fCofKTZsCNnhaSAl1aCpgaQNuk%3D&gt;,\n 'tilejson': &lt;Asset href=https://planetarycomputer.microsoft.com/api/data/v1/item/tilejson.json?collection=cop-dem-glo-90&item=Copernicus_DSM_COG_30_N34_00_W120_00_DEM&assets=data&colormap_name=terrain&rescale=-1000%2C4000&format=png&gt;,\n 'rendered_preview': &lt;Asset href=https://planetarycomputer.microsoft.com/api/data/v1/item/preview.png?collection=cop-dem-glo-90&item=Copernicus_DSM_COG_30_N34_00_W120_00_DEM&assets=data&colormap_name=terrain&rescale=-1000%2C4000&format=png&gt;}\n\n\n\nImage(url=sb_item.assets['rendered_preview'].href, width=500)\n\n\n\n\n\ndem = rioxr.open_rasterio(sb_item.assets['data'].href)\ndem\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.DataArray (band: 1, y: 1200, x: 1200)&gt;\n[1440000 values with dtype=float32]\nCoordinates:\n  * band         (band) int64 1\n  * x            (x) float64 -120.0 -120.0 -120.0 ... -119.0 -119.0 -119.0\n  * y            (y) float64 35.0 35.0 35.0 35.0 35.0 ... 34.0 34.0 34.0 34.0\n    spatial_ref  int64 0\nAttributes:\n    AREA_OR_POINT:  Point\n    scale_factor:   1.0\n    add_offset:     0.0xarray.DataArrayband: 1y: 1200x: 1200...[1440000 values with dtype=float32]Coordinates: (4)band(band)int641array([1])x(x)float64-120.0 -120.0 ... -119.0 -119.0array([-120.      , -119.999167, -119.998333, ..., -119.0025  , -119.001667,\n       -119.000833])y(y)float6435.0 35.0 35.0 ... 34.0 34.0 34.0array([35.      , 34.999167, 34.998333, ..., 34.0025  , 34.001667, 34.000833])spatial_ref()int640crs_wkt :GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AXIS[\"Latitude\",NORTH],AXIS[\"Longitude\",EAST],AUTHORITY[\"EPSG\",\"4326\"]]semi_major_axis :6378137.0semi_minor_axis :6356752.314245179inverse_flattening :298.257223563reference_ellipsoid_name :WGS 84longitude_of_prime_meridian :0.0prime_meridian_name :Greenwichgeographic_crs_name :WGS 84horizontal_datum_name :World Geodetic System 1984grid_mapping_name :latitude_longitudespatial_ref :GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AXIS[\"Latitude\",NORTH],AXIS[\"Longitude\",EAST],AUTHORITY[\"EPSG\",\"4326\"]]GeoTransform :-120.00041666666667 0.0008333333333333334 0.0 35.000416666666666 0.0 -0.0008333333333333334array(0)Indexes: (3)bandPandasIndexPandasIndex(Index([1], dtype='int64', name='band'))xPandasIndexPandasIndex(Index([             -120.0, -119.99916666666667, -119.99833333333333,\n                 -119.9975, -119.99666666666667, -119.99583333333334,\n                  -119.995, -119.99416666666667, -119.99333333333334,\n                 -119.9925,\n       ...\n       -119.00833333333334,           -119.0075, -119.00666666666666,\n       -119.00583333333333,            -119.005, -119.00416666666666,\n       -119.00333333333333,           -119.0025, -119.00166666666667,\n       -119.00083333333333],\n      dtype='float64', name='x', length=1200))yPandasIndexPandasIndex(Index([              35.0,  34.99916666666667, 34.998333333333335,\n                  34.9975,  34.99666666666667,  34.99583333333333,\n                   34.995, 34.994166666666665,  34.99333333333333,\n                  34.9925,\n       ...\n        34.00833333333333,            34.0075,  34.00666666666667,\n       34.005833333333335,             34.005,  34.00416666666667,\n        34.00333333333333,            34.0025, 34.001666666666665,\n        34.00083333333333],\n      dtype='float64', name='y', length=1200))Attributes: (3)AREA_OR_POINT :Pointscale_factor :1.0add_offset :0.0"
  },
  {
    "objectID": "blog/STAC-search.html",
    "href": "blog/STAC-search.html",
    "title": "Land Cover Analysis of Mount Whitney surrounding area",
    "section": "",
    "text": "Code\n# General libraries and functions\nimport os\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.lines as mlines\n\n# Geospatial libraries and functions\nimport geopandas as gpd\nimport xarray as xr\nimport rioxarray as rioxr\nfrom shapely.geometry import box\nfrom shapely.geometry import Point"
  },
  {
    "objectID": "blog/STAC-search.html#exploration",
    "href": "blog/STAC-search.html#exploration",
    "title": "Land Cover Analysis of Mount Whitney surrounding area",
    "section": "Exploration",
    "text": "Exploration\nLet’s check out some of the catalog’s metadata:\n\n\nCode\n# metadata from the catalog\nprint('Title: ', catalog.title)\nprint('Description: ', catalog.description)\n\n\nTitle:  Microsoft Planetary Computer STAC API\nDescription:  Searchable spatiotemporal metadata describing Earth science datasets hosted by the Microsoft Planetary Computer\n\n\nWe can access the catalog’s collections by using the get_collections() method:\n\n\nCode\ncatalog.get_collections()\n\n\n&lt;generator object Client.get_collections at 0x16765edf0&gt;\n\n\nNotice the output of get_collections() is a generator.\nThis is a special kind of lazy obkect in Python over which you can loop over like a list. Unlike a list, the items in the generator do not exist in memory until you explicitely iterate over them or convert them to a list. Let’s try getting the collections from the catalog again:\n\n\nCode\n# get collections and print their names\ncollections = list(catalog.get_collections())\n\nprint('Number of collections: ', len(collections))\nprint('Collections IDs:')\n\nfor collection in collections:\n    print('- ', collection.id)\n\n\nNumber of collections:  122\nCollections IDs:\n-  daymet-annual-pr\n-  daymet-daily-hi\n-  3dep-seamless\n-  3dep-lidar-dsm\n-  fia\n-  sentinel-1-rtc\n-  gridmet\n-  daymet-annual-na\n-  daymet-monthly-na\n-  daymet-annual-hi\n-  daymet-monthly-hi\n-  daymet-monthly-pr\n-  gnatsgo-tables\n-  hgb\n-  cop-dem-glo-30\n-  cop-dem-glo-90\n-  goes-cmi\n-  terraclimate\n-  nasa-nex-gddp-cmip6\n-  gpm-imerg-hhr\n-  gnatsgo-rasters\n-  3dep-lidar-hag\n-  3dep-lidar-intensity\n-  3dep-lidar-pointsourceid\n-  mtbs\n-  noaa-c-cap\n-  3dep-lidar-copc\n-  modis-64A1-061\n-  alos-fnf-mosaic\n-  3dep-lidar-returns\n-  mobi\n-  landsat-c2-l2\n-  era5-pds\n-  chloris-biomass\n-  kaza-hydroforecast\n-  planet-nicfi-analytic\n-  modis-17A2H-061\n-  modis-11A2-061\n-  daymet-daily-pr\n-  3dep-lidar-dtm-native\n-  3dep-lidar-classification\n-  3dep-lidar-dtm\n-  gap\n-  modis-17A2HGF-061\n-  planet-nicfi-visual\n-  gbif\n-  modis-17A3HGF-061\n-  modis-09A1-061\n-  alos-dem\n-  alos-palsar-mosaic\n-  deltares-water-availability\n-  modis-16A3GF-061\n-  modis-21A2-061\n-  us-census\n-  jrc-gsw\n-  deltares-floods\n-  modis-43A4-061\n-  modis-09Q1-061\n-  modis-14A1-061\n-  hrea\n-  modis-13Q1-061\n-  modis-14A2-061\n-  sentinel-2-l2a\n-  modis-15A2H-061\n-  modis-11A1-061\n-  modis-15A3H-061\n-  modis-13A1-061\n-  daymet-daily-na\n-  nrcan-landcover\n-  modis-10A2-061\n-  ecmwf-forecast\n-  noaa-mrms-qpe-24h-pass2\n-  sentinel-1-grd\n-  nasadem\n-  io-lulc\n-  landsat-c2-l1\n-  drcog-lulc\n-  chesapeake-lc-7\n-  chesapeake-lc-13\n-  chesapeake-lu\n-  noaa-mrms-qpe-1h-pass1\n-  noaa-mrms-qpe-1h-pass2\n-  noaa-nclimgrid-monthly\n-  goes-glm\n-  usda-cdl\n-  eclipse\n-  esa-cci-lc\n-  esa-cci-lc-netcdf\n-  fws-nwi\n-  usgs-lcmap-conus-v13\n-  usgs-lcmap-hawaii-v10\n-  noaa-climate-normals-tabular\n-  noaa-climate-normals-netcdf\n-  noaa-climate-normals-gridded\n-  aster-l1t\n-  cil-gdpcir-cc-by-sa\n-  io-lulc-9-class\n-  io-biodiversity\n-  naip\n-  noaa-cdr-sea-surface-temperature-whoi\n-  noaa-cdr-ocean-heat-content\n-  cil-gdpcir-cc0\n-  cil-gdpcir-cc-by\n-  noaa-cdr-sea-surface-temperature-whoi-netcdf\n-  noaa-cdr-sea-surface-temperature-optimum-interpolation\n-  modis-10A1-061\n-  sentinel-5p-l2-netcdf\n-  sentinel-3-olci-wfr-l2-netcdf\n-  noaa-cdr-ocean-heat-content-netcdf\n-  sentinel-3-synergy-aod-l2-netcdf\n-  sentinel-3-synergy-v10-l2-netcdf\n-  sentinel-3-olci-lfr-l2-netcdf\n-  sentinel-3-sral-lan-l2-netcdf\n-  sentinel-3-slstr-lst-l2-netcdf\n-  sentinel-3-slstr-wst-l2-netcdf\n-  sentinel-3-sral-wat-l2-netcdf\n-  ms-buildings\n-  sentinel-3-slstr-frp-l2-netcdf\n-  sentinel-3-synergy-syn-l2-netcdf\n-  sentinel-3-synergy-vgp-l2-netcdf\n-  sentinel-3-synergy-vg1-l2-netcdf\n-  esa-worldcover"
  },
  {
    "objectID": "blog/STAC-search.html#collection",
    "href": "blog/STAC-search.html#collection",
    "title": "Land Cover Analysis of Mount Whitney surrounding area",
    "section": "Collection",
    "text": "Collection\nWe can select a single collection for exploration using the get_child() method for the catalog and the collection id as the parameter:\n\n\nCode\nnaip_collection = catalog.get_child('naip')\nnaip_collection\n\n\n\n\n\n\n\n    \n        \n            \n                \n                    \n        \n            type\n            \"Collection\"\n        \n    \n                \n            \n                \n                    \n        \n            id\n            \"naip\"\n        \n    \n                \n            \n                \n                    \n        \n            stac_version\n            \"1.0.0\"\n        \n    \n                \n            \n                \n                    \n        \n            description\n            \"The [National Agriculture Imagery Program](https://www.fsa.usda.gov/programs-and-services/aerial-photography/imagery-programs/naip-imagery/) (NAIP) provides U.S.-wide, high-resolution aerial imagery, with four spectral bands (R, G, B, IR).  NAIP is administered by the [Aerial Field Photography Office](https://www.fsa.usda.gov/programs-and-services/aerial-photography/) (AFPO) within the [US Department of Agriculture](https://www.usda.gov/) (USDA).  Data are captured at least once every three years for each state.  This dataset represents NAIP data from 2010-present, in [cloud-optimized GeoTIFF](https://www.cogeo.org/) format.\n\"\n        \n    \n                \n            \n                \n                    \n        \n            links\n            [] 6 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            rel\n            \"items\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/naip/items\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/geo+json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            rel\n            \"root\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Microsoft Planetary Computer STAC API\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            rel\n            \"license\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://www.fsa.usda.gov/help/policies-and-links/\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Public Domain\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            rel\n            \"describedby\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/dataset/naip\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"text/html\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Human readable dataset overview and reference\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            \n        \n            \n                \n        \n            rel\n            \"self\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/naip\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            5\n            \n        \n            \n                \n        \n            rel\n            \"parent\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Microsoft Planetary Computer STAC API\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            stac_extensions\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"https://stac-extensions.github.io/item-assets/v1.0.0/schema.json\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"https://stac-extensions.github.io/table/v1.2.0/schema.json\"\n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            item_assets\n            \n        \n            \n                \n        \n            image\n            \n        \n            \n                \n        \n            type\n            \"image/tiff; application=geotiff; profile=cloud-optimized\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"data\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            title\n            \"RGBIR COG tile\"\n        \n    \n            \n        \n            \n                \n        \n            eo:bands\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            name\n            \"Red\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"red\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            name\n            \"Green\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"green\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            name\n            \"Blue\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"blue\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            name\n            \"NIR\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"nir\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"near-infrared\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            metadata\n            \n        \n            \n                \n        \n            type\n            \"text/plain\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"metadata\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            title\n            \"FGDC Metdata\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            thumbnail\n            \n        \n            \n                \n        \n            type\n            \"image/jpeg\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"thumbnail\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Thumbnail\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            msft:region\n            \"westeurope\"\n        \n    \n                \n            \n                \n                    \n        \n            msft:container\n            \"naip\"\n        \n    \n                \n            \n                \n                    \n        \n            msft:storage_account\n            \"naipeuwest\"\n        \n    \n                \n            \n                \n                    \n        \n            msft:short_description\n            \"NAIP provides US-wide, high-resolution aerial imagery.  This dataset includes NAIP images from 2010 to the present.\"\n        \n    \n                \n            \n                \n                    \n        \n            title\n            \"NAIP: National Agriculture Imagery Program\"\n        \n    \n                \n            \n                \n                    \n        \n            extent\n            \n        \n            \n                \n        \n            spatial\n            \n        \n            \n                \n        \n            bbox\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -124.784\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            24.744\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            -66.951\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            49.346\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            temporal\n            \n        \n            \n                \n        \n            interval\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"2010-01-01T00:00:00Z\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"2021-12-31T00:00:00Z\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            license\n            \"proprietary\"\n        \n    \n                \n            \n                \n                    \n        \n            keywords\n            [] 7 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"NAIP\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"Aerial\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \"Imagery\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \"USDA\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            \"AFPO\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            5\n            \"Agriculture\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            6\n            \"United States\"\n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            providers\n            [] 3 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            name\n            \"USDA Farm Service Agency\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"producer\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"licensor\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            url\n            \"https://www.fsa.usda.gov/programs-and-services/aerial-photography/imagery-programs/naip-imagery/\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            name\n            \"Esri\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"processor\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            url\n            \"https://www.esri.com/\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            name\n            \"Microsoft\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"host\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"processor\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            url\n            \"https://planetarycomputer.microsoft.com\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            summaries\n            \n        \n            \n                \n        \n            gsd\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            0.6\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            1.0\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            eo:bands\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            name\n            \"Red\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"red\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"visible red\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            name\n            \"Green\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"green\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"visible green\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            name\n            \"Blue\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"blue\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"visible blue\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            name\n            \"NIR\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"nir\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"near-infrared\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n                \n            \n                \n                    \n        \n            assets\n            \n        \n            \n                \n        \n            thumbnail\n            \n        \n            \n                \n        \n            href\n            \"https://ai4edatasetspublicassets.blob.core.windows.net/assets/pc_thumbnails/naip.png\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/png\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"NAIP thumbnail\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"thumbnail\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            geoparquet-items\n            \n        \n            \n                \n        \n            href\n            \"abfs://items/naip.parquet\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/x-parquet\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"GeoParquet STAC items\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"Snapshot of the collection's STAC items exported to GeoParquet format.\"\n        \n    \n            \n        \n            \n                \n        \n            msft:partition_info\n            \n        \n            \n                \n        \n            is_partitioned\n            True\n        \n    \n            \n        \n            \n                \n        \n            partition_frequency\n            \"AS\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            table:storage_options\n            \n        \n            \n                \n        \n            account_name\n            \"pcstacitems\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"stac-items\""
  },
  {
    "objectID": "blog/STAC-search.html#catalog-search",
    "href": "blog/STAC-search.html#catalog-search",
    "title": "Land Cover Analysis of Mount Whitney surrounding area",
    "section": "Catalog search",
    "text": "Catalog search\nWe can narrow the search within the catalog by specifying a time range, an area of interest, and the collection name. The simplest way to define the are of interest to look for in the catalog are:\n\na GeoJSON-type dictionary with coordinates of the bounding box\nas a list [xmin, ymin, xmax, ymax] with the coordinate values definind the four corners of the bounding box.\n\nYou could also use a point, or some more complex polygon.\nIn this lesson we will look for NAIP scenes over Santa Barbara from 2018 to 2020. We’ll use the GeoJSON method: to define the area of interest:\n\n\nCode\n# temporal range of interest\n# CHECK: how to get open/close time ranges\ntime_range = \"2018-01-01/2023-01-01\"\n\n# NCEAS bounding box (as a GeoJSON)\n# NCEAS bounding box (as a GeoJSON)\nbbox = {\n    \"type\": \"Polygon\",\n    \"coordinates\":[\n        [\n            [-119.70608227128903, 34.426300194372274],\n            [-119.70608227128903, 34.42041139020533],\n            [-119.6967885126002, 34.42041139020533],\n            [-119.6967885126002, 34.426300194372274],\n            [-119.70608227128903, 34.426300194372274]\n        ]\n    ]\n}\n\n# catalog search\nsearch = catalog.search(\n    collections = ['naip'], # list with collection id\n    intersects = bbox,\n    datetime=time_range\n) \nsearch\n\n\n&lt;pystac_client.item_search.ItemSearch at 0x1680d6810&gt;\n\n\nTo get the items found in the search (or check if there were any matches in the search) we use the item_collection() method:\n\n\nCode\nitems = search.item_collection()\n\n# number of items in search\nlen(items)\n\n\n2\n\n\n\n\nCode\nitems\n\n\n\n\n\n\n    \n        \n            \n                \n                    \n        \n            type\n            \"FeatureCollection\"\n        \n    \n                \n            \n                \n                    \n        \n            features\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            type\n            \"Feature\"\n        \n    \n            \n        \n            \n                \n        \n            stac_version\n            \"1.0.0\"\n        \n    \n            \n        \n            \n                \n        \n            id\n            \"ca_m_3411935_sw_11_060_20200521\"\n        \n    \n            \n        \n            \n                \n        \n            properties\n            \n        \n            \n                \n        \n            gsd\n            0.6\n        \n    \n            \n        \n            \n                \n        \n            datetime\n            \"2020-05-21T00:00:00Z\"\n        \n    \n            \n        \n            \n                \n        \n            naip:year\n            \"2020\"\n        \n    \n            \n        \n            \n                \n        \n            proj:bbox\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            246930.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            3806808.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            253260.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            3814296.0\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            proj:epsg\n            26911\n        \n    \n            \n        \n            \n                \n        \n            naip:state\n            \"ca\"\n        \n    \n            \n        \n            \n                \n        \n            proj:shape\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            12480\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            10550\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            proj:transform\n            [] 9 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            0.6\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            246930.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            -0.6\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            5\n            3814296.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            6\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            7\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            8\n            1.0\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            geometry\n            \n        \n            \n                \n        \n            type\n            \"Polygon\"\n        \n    \n            \n        \n            \n                \n        \n            coordinates\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 5 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -119.683292\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.373269\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -119.685448\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.440724\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -119.754272\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.439192\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -119.752061\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.371741\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -119.683292\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.373269\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            links\n            [] 5 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            rel\n            \"collection\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/naip\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            rel\n            \"parent\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/naip\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            rel\n            \"root\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Microsoft Planetary Computer STAC API\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            rel\n            \"self\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/naip/items/ca_m_3411935_sw_11_060_20200521\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/geo+json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            \n        \n            \n                \n        \n            rel\n            \"preview\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/map?collection=naip&item=ca_m_3411935_sw_11_060_20200521\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"text/html\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Map of item\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            assets\n            \n        \n            \n                \n        \n            image\n            \n        \n            \n                \n        \n            href\n            \"https://naipeuwest.blob.core.windows.net/naip/v002/ca/2020/ca_060cm_2020/34119/m_3411935_sw_11_060_20200521.tif?st=2023-11-28T05%3A48%3A51Z&se=2023-11-29T06%3A33%3A51Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-11-28T18%3A08%3A50Z&ske=2023-12-05T18%3A08%3A50Z&sks=b&skv=2021-06-08&sig=nP0oBdGTDhtG1t5h6ZgijAUbeAOX1x0QDgtunpDgI1E%3D\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/tiff; application=geotiff; profile=cloud-optimized\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"RGBIR COG tile\"\n        \n    \n            \n        \n            \n                \n        \n            eo:bands\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            name\n            \"Red\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"red\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            name\n            \"Green\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"green\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            name\n            \"Blue\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"blue\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            name\n            \"NIR\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"nir\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"near-infrared\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"data\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            thumbnail\n            \n        \n            \n                \n        \n            href\n            \"https://naipeuwest.blob.core.windows.net/naip/v002/ca/2020/ca_060cm_2020/34119/m_3411935_sw_11_060_20200521.200.jpg?st=2023-11-28T05%3A48%3A51Z&se=2023-11-29T06%3A33%3A51Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-11-28T18%3A08%3A50Z&ske=2023-12-05T18%3A08%3A50Z&sks=b&skv=2021-06-08&sig=nP0oBdGTDhtG1t5h6ZgijAUbeAOX1x0QDgtunpDgI1E%3D\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/jpeg\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Thumbnail\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"thumbnail\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            tilejson\n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/tilejson.json?collection=naip&item=ca_m_3411935_sw_11_060_20200521&assets=image&asset_bidx=image%7C1%2C2%2C3&format=png\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"TileJSON with default rendering\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"tiles\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            rendered_preview\n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/preview.png?collection=naip&item=ca_m_3411935_sw_11_060_20200521&assets=image&asset_bidx=image%7C1%2C2%2C3&format=png\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/png\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Rendered preview\"\n        \n    \n            \n        \n            \n                \n        \n            rel\n            \"preview\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"overview\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            bbox\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -119.754272\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.371741\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            -119.683292\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            34.440724\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            stac_extensions\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"https://stac-extensions.github.io/eo/v1.0.0/schema.json\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"https://stac-extensions.github.io/projection/v1.0.0/schema.json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            collection\n            \"naip\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            type\n            \"Feature\"\n        \n    \n            \n        \n            \n                \n        \n            stac_version\n            \"1.0.0\"\n        \n    \n            \n        \n            \n                \n        \n            id\n            \"ca_m_3411935_sw_11_060_20180724_20190209\"\n        \n    \n            \n        \n            \n                \n        \n            properties\n            \n        \n            \n                \n        \n            gsd\n            0.6\n        \n    \n            \n        \n            \n                \n        \n            datetime\n            \"2018-07-24T00:00:00Z\"\n        \n    \n            \n        \n            \n                \n        \n            naip:year\n            \"2018\"\n        \n    \n            \n        \n            \n                \n        \n            proj:bbox\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            246978.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            3806856.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            253212.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            3814248.0\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            proj:epsg\n            26911\n        \n    \n            \n        \n            \n                \n        \n            naip:state\n            \"ca\"\n        \n    \n            \n        \n            \n                \n        \n            proj:shape\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            12320\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            10390\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            proj:transform\n            [] 9 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            0.6\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            246978.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            -0.6\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            5\n            3814248.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            6\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            7\n            0.0\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            8\n            1.0\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            geometry\n            \n        \n            \n                \n        \n            type\n            \"Polygon\"\n        \n    \n            \n        \n            \n                \n        \n            coordinates\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 5 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -119.683827\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.37369\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -119.685956\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.44028\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -119.753736\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.438772\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -119.751554\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.372185\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -119.683827\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.37369\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            links\n            [] 5 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            rel\n            \"collection\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/naip\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            rel\n            \"parent\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/naip\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            rel\n            \"root\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Microsoft Planetary Computer STAC API\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            rel\n            \"self\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/stac/v1/collections/naip/items/ca_m_3411935_sw_11_060_20180724_20190209\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/geo+json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            4\n            \n        \n            \n                \n        \n            rel\n            \"preview\"\n        \n    \n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/map?collection=naip&item=ca_m_3411935_sw_11_060_20180724_20190209\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"text/html\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Map of item\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            assets\n            \n        \n            \n                \n        \n            image\n            \n        \n            \n                \n        \n            href\n            \"https://naipeuwest.blob.core.windows.net/naip/v002/ca/2018/ca_060cm_2018/34119/m_3411935_sw_11_060_20180724_20190209.tif?st=2023-11-28T05%3A48%3A51Z&se=2023-11-29T06%3A33%3A51Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-11-28T18%3A08%3A50Z&ske=2023-12-05T18%3A08%3A50Z&sks=b&skv=2021-06-08&sig=nP0oBdGTDhtG1t5h6ZgijAUbeAOX1x0QDgtunpDgI1E%3D\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/tiff; application=geotiff; profile=cloud-optimized\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"RGBIR COG tile\"\n        \n    \n            \n        \n            \n                \n        \n            eo:bands\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \n        \n            \n                \n        \n            name\n            \"Red\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"red\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \n        \n            \n                \n        \n            name\n            \"Green\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"green\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            \n        \n            \n                \n        \n            name\n            \"Blue\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"blue\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            \n        \n            \n                \n        \n            name\n            \"NIR\"\n        \n    \n            \n        \n            \n                \n        \n            common_name\n            \"nir\"\n        \n    \n            \n        \n            \n                \n        \n            description\n            \"near-infrared\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"data\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            metadata\n            \n        \n            \n                \n        \n            href\n            \"https://naipeuwest.blob.core.windows.net/naip/v002/ca/2018/ca_fgdc_2018/34119/m_3411935_sw_11_060_20180724.txt?st=2023-11-28T05%3A48%3A51Z&se=2023-11-29T06%3A33%3A51Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-11-28T18%3A08%3A50Z&ske=2023-12-05T18%3A08%3A50Z&sks=b&skv=2021-06-08&sig=nP0oBdGTDhtG1t5h6ZgijAUbeAOX1x0QDgtunpDgI1E%3D\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"text/plain\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"FGDC Metdata\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"metadata\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            thumbnail\n            \n        \n            \n                \n        \n            href\n            \"https://naipeuwest.blob.core.windows.net/naip/v002/ca/2018/ca_060cm_2018/34119/m_3411935_sw_11_060_20180724_20190209.200.jpg?st=2023-11-28T05%3A48%3A51Z&se=2023-11-29T06%3A33%3A51Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-11-28T18%3A08%3A50Z&ske=2023-12-05T18%3A08%3A50Z&sks=b&skv=2021-06-08&sig=nP0oBdGTDhtG1t5h6ZgijAUbeAOX1x0QDgtunpDgI1E%3D\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/jpeg\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Thumbnail\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"thumbnail\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            tilejson\n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/tilejson.json?collection=naip&item=ca_m_3411935_sw_11_060_20180724_20190209&assets=image&asset_bidx=image%7C1%2C2%2C3&format=png\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"application/json\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"TileJSON with default rendering\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"tiles\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            rendered_preview\n            \n        \n            \n                \n        \n            href\n            \"https://planetarycomputer.microsoft.com/api/data/v1/item/preview.png?collection=naip&item=ca_m_3411935_sw_11_060_20180724_20190209&assets=image&asset_bidx=image%7C1%2C2%2C3&format=png\"\n        \n    \n            \n        \n            \n                \n        \n            type\n            \"image/png\"\n        \n    \n            \n        \n            \n                \n        \n            title\n            \"Rendered preview\"\n        \n    \n            \n        \n            \n                \n        \n            rel\n            \"preview\"\n        \n    \n            \n        \n            \n                \n        \n            roles\n            [] 1 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"overview\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            bbox\n            [] 4 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            -119.753736\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            34.372185\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            2\n            -119.683827\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            3\n            34.44028\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            stac_extensions\n            [] 2 items\n        \n        \n            \n        \n            \n                \n        \n            0\n            \"https://stac-extensions.github.io/eo/v1.0.0/schema.json\"\n        \n    \n            \n        \n    \n        \n            \n        \n            \n                \n        \n            1\n            \"https://stac-extensions.github.io/projection/v1.0.0/schema.json\"\n        \n    \n            \n        \n    \n        \n    \n            \n        \n            \n                \n        \n            collection\n            \"naip\""
  },
  {
    "objectID": "blog/STAC-search.html#item",
    "href": "blog/STAC-search.html#item",
    "title": "Land Cover Analysis of Mount Whitney surrounding area",
    "section": "Item",
    "text": "Item\nLet’s get the first item in the search\n\n\nCode\n# get first item in the catalog search\nitem = items[0]\ntype(item)\n\n\npystac.item.Item\n\n\nRemember the STAC item is the core object in the catalog.\nThe item does not contain the data itslef, but rather metadata about it and links to access the actual data (assets). Some of the metadta:\n\n\nCode\nprint('id', item.id)\nitem.properties\n\n\nid ca_m_3411935_sw_11_060_20200521\n\n\n{'gsd': 0.6,\n 'datetime': '2020-05-21T00:00:00Z',\n 'naip:year': '2020',\n 'proj:bbox': [246930.0, 3806808.0, 253260.0, 3814296.0],\n 'proj:epsg': 26911,\n 'naip:state': 'ca',\n 'proj:shape': [12480, 10550],\n 'proj:transform': [0.6, 0.0, 246930.0, 0.0, -0.6, 3814296.0, 0.0, 0.0, 1.0]}\n\n\nJust as the item properties, the item assets are given in a dictionary, with each vlaue being a pystac.asset. Let’s check the assets in the item:\n\n\nCode\nitem.assets\n\n\n{'image': &lt;Asset href=https://naipeuwest.blob.core.windows.net/naip/v002/ca/2020/ca_060cm_2020/34119/m_3411935_sw_11_060_20200521.tif?st=2023-11-28T05%3A48%3A51Z&se=2023-11-29T06%3A33%3A51Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-11-28T18%3A08%3A50Z&ske=2023-12-05T18%3A08%3A50Z&sks=b&skv=2021-06-08&sig=nP0oBdGTDhtG1t5h6ZgijAUbeAOX1x0QDgtunpDgI1E%3D&gt;,\n 'thumbnail': &lt;Asset href=https://naipeuwest.blob.core.windows.net/naip/v002/ca/2020/ca_060cm_2020/34119/m_3411935_sw_11_060_20200521.200.jpg?st=2023-11-28T05%3A48%3A51Z&se=2023-11-29T06%3A33%3A51Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-11-28T18%3A08%3A50Z&ske=2023-12-05T18%3A08%3A50Z&sks=b&skv=2021-06-08&sig=nP0oBdGTDhtG1t5h6ZgijAUbeAOX1x0QDgtunpDgI1E%3D&gt;,\n 'tilejson': &lt;Asset href=https://planetarycomputer.microsoft.com/api/data/v1/item/tilejson.json?collection=naip&item=ca_m_3411935_sw_11_060_20200521&assets=image&asset_bidx=image%7C1%2C2%2C3&format=png&gt;,\n 'rendered_preview': &lt;Asset href=https://planetarycomputer.microsoft.com/api/data/v1/item/preview.png?collection=naip&item=ca_m_3411935_sw_11_060_20200521&assets=image&asset_bidx=image%7C1%2C2%2C3&format=png&gt;}\n\n\n\n\nCode\nfor key in item.assets.keys():\n    print(key, '--', item.assets[key].title)\n\n\nimage -- RGBIR COG tile\nthumbnail -- Thumbnail\ntilejson -- TileJSON with default rendering\nrendered_preview -- Rendered preview\n\n\nNotice each asset has an href, which is a link to the asset object (i.e. the data). For example, we can use the URL for the rendered preview asset to plot it:\n\n\nCode\nImage(url=item.assets['rendered_preview'].href, width=500)"
  },
  {
    "objectID": "blog/STAC-search.html#load-data",
    "href": "blog/STAC-search.html#load-data",
    "title": "Land Cover Analysis of Mount Whitney surrounding area",
    "section": "Load data",
    "text": "Load data\nThe raster data in our current item is in the image asset. Again, we access this data via its URL. This time we open it using rioxr.open_rasterio() directly:\n\n\nCode\nsb = rioxr.open_rasterio(item.assets['image'].href)\nsb\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.DataArray (band: 4, y: 12480, x: 10550)&gt;\n[526656000 values with dtype=uint8]\nCoordinates:\n  * band         (band) int64 1 2 3 4\n  * x            (x) float64 2.469e+05 2.469e+05 ... 2.533e+05 2.533e+05\n  * y            (y) float64 3.814e+06 3.814e+06 ... 3.807e+06 3.807e+06\n    spatial_ref  int64 0\nAttributes:\n    AREA_OR_POINT:             Area\n    TIFFTAG_IMAGEDESCRIPTION:  OrthoVista\n    TIFFTAG_RESOLUTIONUNIT:    1 (unitless)\n    TIFFTAG_SOFTWARE:          Trimble Germany GmbH\n    TIFFTAG_XRESOLUTION:       1\n    TIFFTAG_YRESOLUTION:       1\n    _FillValue:                0\n    scale_factor:              1.0\n    add_offset:                0.0xarray.DataArrayband: 4y: 12480x: 10550...[526656000 values with dtype=uint8]Coordinates: (4)band(band)int641 2 3 4array([1, 2, 3, 4])x(x)float642.469e+05 2.469e+05 ... 2.533e+05array([246930.3, 246930.9, 246931.5, ..., 253258.5, 253259.1, 253259.7])y(y)float643.814e+06 3.814e+06 ... 3.807e+06array([3814295.7, 3814295.1, 3814294.5, ..., 3806809.5, 3806808.9, 3806808.3])spatial_ref()int640crs_wkt :PROJCS[\"NAD83 / UTM zone 11N\",GEOGCS[\"NAD83\",DATUM[\"North_American_Datum_1983\",SPHEROID[\"GRS 1980\",6378137,298.257222101,AUTHORITY[\"EPSG\",\"7019\"]],AUTHORITY[\"EPSG\",\"6269\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4269\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",-117],PARAMETER[\"scale_factor\",0.9996],PARAMETER[\"false_easting\",500000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"26911\"]]semi_major_axis :6378137.0semi_minor_axis :6356752.314140356inverse_flattening :298.257222101reference_ellipsoid_name :GRS 1980longitude_of_prime_meridian :0.0prime_meridian_name :Greenwichgeographic_crs_name :NAD83horizontal_datum_name :North American Datum 1983projected_crs_name :NAD83 / UTM zone 11Ngrid_mapping_name :transverse_mercatorlatitude_of_projection_origin :0.0longitude_of_central_meridian :-117.0false_easting :500000.0false_northing :0.0scale_factor_at_central_meridian :0.9996spatial_ref :PROJCS[\"NAD83 / UTM zone 11N\",GEOGCS[\"NAD83\",DATUM[\"North_American_Datum_1983\",SPHEROID[\"GRS 1980\",6378137,298.257222101,AUTHORITY[\"EPSG\",\"7019\"]],AUTHORITY[\"EPSG\",\"6269\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4269\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",-117],PARAMETER[\"scale_factor\",0.9996],PARAMETER[\"false_easting\",500000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"26911\"]]GeoTransform :246930.0 0.6 0.0 3814296.0 0.0 -0.6array(0)Indexes: (3)bandPandasIndexPandasIndex(Index([1, 2, 3, 4], dtype='int64', name='band'))xPandasIndexPandasIndex(Index([          246930.3,           246930.9,           246931.5,\n       246932.09999999998, 246932.69999999998,           246933.3,\n                 246933.9,           246934.5, 246935.09999999998,\n       246935.69999999998,\n       ...\n                 253254.3,           253254.9,           253255.5,\n       253256.09999999998, 253256.69999999998,           253257.3,\n                 253257.9,           253258.5, 253259.09999999998,\n       253259.69999999998],\n      dtype='float64', name='x', length=10550))yPandasIndexPandasIndex(Index([         3814295.7,          3814295.1,          3814294.5,\n       3814293.9000000004, 3814293.3000000003,          3814292.7,\n                3814292.1,          3814291.5, 3814290.9000000004,\n       3814290.3000000003,\n       ...\n                3806813.7,          3806813.1,          3806812.5,\n       3806811.9000000004, 3806811.3000000003,          3806810.7,\n                3806810.1,          3806809.5, 3806808.9000000004,\n       3806808.3000000003],\n      dtype='float64', name='y', length=12480))Attributes: (9)AREA_OR_POINT :AreaTIFFTAG_IMAGEDESCRIPTION :OrthoVistaTIFFTAG_RESOLUTIONUNIT :1 (unitless)TIFFTAG_SOFTWARE :Trimble Germany GmbHTIFFTAG_XRESOLUTION :1TIFFTAG_YRESOLUTION :1_FillValue :0scale_factor :1.0add_offset :0.0\n\n\n\n\nCode\n# plot raster with correct ratio\nsize = 6 # height in in of plot\naspect = sb.rio.width/sb.rio.height\nsb.sel(band=[1,2,3]).plot.imshow(size=size)#, aspect=aspect)\n\n\n&lt;matplotlib.image.AxesImage at 0x16784e250&gt;"
  },
  {
    "objectID": "blog/STAC-search.html#exercise",
    "href": "blog/STAC-search.html#exercise",
    "title": "Land Cover Analysis of Mount Whitney surrounding area",
    "section": "Exercise",
    "text": "Exercise\nThe ‘cop-dem-glo-90’ (id of collection) collection contains the Copernicus DEM at 90m resolution (the one we used for Grand Canyon).\n\nUse the bbox for Santa Barbara to look for items in this collection/\nGet the first item in the search and check its assets.\nPlot the item’s rendered preview asset\nOpen the item’s data using rioxarray.\n\n\n\nCode\n# catalog search\n\nsearch = catalog.search(\ncollections = ['cop-dem-glo-90'],\nintersects = bbox)\n\nsearch\n\n\n&lt;pystac_client.item_search.ItemSearch at 0x1677d43d0&gt;\n\n\n\n\nCode\nsb_items = search.item_collection()\n\n# number of items in search \nlen(sb_items)\n\n\n1\n\n\n\n\nCode\n# first item in catalog\nsb_item = sb_items[0]\ntype(sb_item)\n\n\npystac.item.Item\n\n\n\n\nCode\nsb_item.assets\n\n\n{'data': &lt;Asset href=https://elevationeuwest.blob.core.windows.net/copernicus-dem/COP90_hh/Copernicus_DSM_COG_30_N34_00_W120_00_DEM.tif?st=2023-11-28T05%3A50%3A18Z&se=2023-11-29T06%3A35%3A18Z&sp=rl&sv=2021-06-08&sr=c&skoid=c85c15d6-d1ae-42d4-af60-e2ca0f81359b&sktid=72f988bf-86f1-41af-91ab-2d7cd011db47&skt=2023-11-29T00%3A21%3A36Z&ske=2023-12-06T00%3A21%3A36Z&sks=b&skv=2021-06-08&sig=8YM0NGC%2BhTB%2BFH2E4fCofKTZsCNnhaSAl1aCpgaQNuk%3D&gt;,\n 'tilejson': &lt;Asset href=https://planetarycomputer.microsoft.com/api/data/v1/item/tilejson.json?collection=cop-dem-glo-90&item=Copernicus_DSM_COG_30_N34_00_W120_00_DEM&assets=data&colormap_name=terrain&rescale=-1000%2C4000&format=png&gt;,\n 'rendered_preview': &lt;Asset href=https://planetarycomputer.microsoft.com/api/data/v1/item/preview.png?collection=cop-dem-glo-90&item=Copernicus_DSM_COG_30_N34_00_W120_00_DEM&assets=data&colormap_name=terrain&rescale=-1000%2C4000&format=png&gt;}\n\n\n\n\nCode\nImage(url=sb_item.assets['rendered_preview'].href, width=500)\n\n\n\n\n\n\n\nCode\ndem = rioxr.open_rasterio(sb_item.assets['data'].href)\ndem\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.DataArray (band: 1, y: 1200, x: 1200)&gt;\n[1440000 values with dtype=float32]\nCoordinates:\n  * band         (band) int64 1\n  * x            (x) float64 -120.0 -120.0 -120.0 ... -119.0 -119.0 -119.0\n  * y            (y) float64 35.0 35.0 35.0 35.0 35.0 ... 34.0 34.0 34.0 34.0\n    spatial_ref  int64 0\nAttributes:\n    AREA_OR_POINT:  Point\n    scale_factor:   1.0\n    add_offset:     0.0xarray.DataArrayband: 1y: 1200x: 1200...[1440000 values with dtype=float32]Coordinates: (4)band(band)int641array([1])x(x)float64-120.0 -120.0 ... -119.0 -119.0array([-120.      , -119.999167, -119.998333, ..., -119.0025  , -119.001667,\n       -119.000833])y(y)float6435.0 35.0 35.0 ... 34.0 34.0 34.0array([35.      , 34.999167, 34.998333, ..., 34.0025  , 34.001667, 34.000833])spatial_ref()int640crs_wkt :GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AXIS[\"Latitude\",NORTH],AXIS[\"Longitude\",EAST],AUTHORITY[\"EPSG\",\"4326\"]]semi_major_axis :6378137.0semi_minor_axis :6356752.314245179inverse_flattening :298.257223563reference_ellipsoid_name :WGS 84longitude_of_prime_meridian :0.0prime_meridian_name :Greenwichgeographic_crs_name :WGS 84horizontal_datum_name :World Geodetic System 1984grid_mapping_name :latitude_longitudespatial_ref :GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AXIS[\"Latitude\",NORTH],AXIS[\"Longitude\",EAST],AUTHORITY[\"EPSG\",\"4326\"]]GeoTransform :-120.00041666666667 0.0008333333333333334 0.0 35.000416666666666 0.0 -0.0008333333333333334array(0)Indexes: (3)bandPandasIndexPandasIndex(Index([1], dtype='int64', name='band'))xPandasIndexPandasIndex(Index([             -120.0, -119.99916666666667, -119.99833333333333,\n                 -119.9975, -119.99666666666667, -119.99583333333334,\n                  -119.995, -119.99416666666667, -119.99333333333334,\n                 -119.9925,\n       ...\n       -119.00833333333334,           -119.0075, -119.00666666666666,\n       -119.00583333333333,            -119.005, -119.00416666666666,\n       -119.00333333333333,           -119.0025, -119.00166666666667,\n       -119.00083333333333],\n      dtype='float64', name='x', length=1200))yPandasIndexPandasIndex(Index([              35.0,  34.99916666666667, 34.998333333333335,\n                  34.9975,  34.99666666666667,  34.99583333333333,\n                   34.995, 34.994166666666665,  34.99333333333333,\n                  34.9925,\n       ...\n        34.00833333333333,            34.0075,  34.00666666666667,\n       34.005833333333335,             34.005,  34.00416666666667,\n        34.00333333333333,            34.0025, 34.001666666666665,\n        34.00083333333333],\n      dtype='float64', name='y', length=1200))Attributes: (3)AREA_OR_POINT :Pointscale_factor :1.0add_offset :0.0"
  },
  {
    "objectID": "blog/STAC-search.html#access",
    "href": "blog/STAC-search.html#access",
    "title": "Land Cover Analysis of Mount Whitney surrounding area",
    "section": "Access",
    "text": "Access\nWe use the Client function from the pystac_client package to access the catalog:\n\n\nCode\n# access catalog\ncatalog = Client.open(\n    \"https://planetarycomputer.microsoft.com/api/stac/v1\",\n    modifier = planetary_computer.sign_inplace)\n\n\nThe modifier parameter is needed to access the data in the MPC catalog."
  },
  {
    "objectID": "blog/STAC-search.html#import-libraries-and-functions",
    "href": "blog/STAC-search.html#import-libraries-and-functions",
    "title": "Land Cover Analysis of Mount Whitney surrounding area",
    "section": "",
    "text": "Code\n# General libraries and functions\nimport os\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.lines as mlines\n\n# Geospatial libraries and functions\nimport geopandas as gpd\nimport xarray as xr\nimport rioxarray as rioxr\nfrom shapely.geometry import box\nfrom shapely.geometry import Point"
  },
  {
    "objectID": "blog/2023-12-11-post/STAC-search.html",
    "href": "blog/2023-12-11-post/STAC-search.html",
    "title": "Land Cover Analysis of Mount Whitney surrounding area",
    "section": "",
    "text": "In this analysis, I’ll use a raster dataset from the U.S. Geological Survey (USGS) to extract land cover statistics in a small region surrounding Mount Whitney in California. The numbers contained in the raster represent land cover classification, so I will also have to use an accompanying CSV file from USGS that tells us what classes of land cover correspond to these numbers. I’ll also be creating a simple map showing the area of analysis relative to Mount Whitney. An analysis of this kind has potential use for government agencies seeking to better understand land cover in a region.\n\n\n\nMount Whitney\n\n\n\n\n\nAt an elevation of 14,505 feet above sea level, Mount Whitney is the tallest mountain in the contiguous United States. Located in the Sierra Nevada mountain range, Mount Whitney’s western slope and summit are located in Sequoia National Park, and the summit is also the southern terminus of the popular John Muir trail, which stretches over 200 miles from Yosemite Valley down to Mount Whitney. The eastern slope is part of the Inyo National Forest and is managed by the U.S. Forest Service.\n\n\n\n\nExracting pixels per land cover class from raster dataset\nMarging extracted pixels with tabular dataset matching numeric codes to character strings\nCreating horizontal bar plot showing percent area of different land cover classes\nExtracting bounding box of raster dataset\nCreating map that shows area of land cover analysis relative to Mount Whitney with California boundaries as a basemap\n\n\n\n\n\n\nThe primary dataset that we will be working with comes from the 2011 National Terrestrial Ecosystems data, which was collected as part of the USGS Gap Analysis Project (GAP) by the U.S. Forest Service and Department of the Interior (2). For the purposes of this analysis, the full, nationwide dataset was pre-processed in Microsoft Planetary Computer to only include the area around Mount Whitney. With 30 meter by 30 meter pixel resolution, this raster dataset is a TIF file and contains numbers representing land cover classification.\nU.S. Geological Survey (USGS) Gap Analysis Project (GAP), 2016, GAP/LANDFIRE National Terrestrial Ecosystems 2011: U.S. Geological Survey data release, https://doi.org/10.5066/F7ZS2TM0.\n\n\nCode\nimport os\nimport xarray as xr\nimport rioxarray as rioxr\n\n# Import land cover TIF as xarray.DataArray\nlulc_fp = os.path.join(os.getcwd(),'..','data','2023-12-11-post-data','land_cover.tif')\nlulc = rioxr.open_rasterio(lulc_fp)\n\n\n\n\n\nOur second dataset is also from the 2011 National Terrestrial Ecosystems data and helps us make sense of data in the raster dataset. This tabular dataset is a CSV file and has the land cover classification names associated with each code used in the raster dataset. This dataset was accessed from the same online source as the raster dataset.\n\n\nCode\nimport pandas as pd\n\n# Import accompanying CSV as pandas.DataFrame\nclass_names = pd.read_csv('../data/2023-12-11-post-data/GAP_National_Terrestrial_Ecosystems.csv')\n\n\n\n\n\nThe final dataset that we will be using is a shapefile of California geographic boundaries, included in the U.S. Census Bureau’s 2016 Topologically Integrated Geographic Encoding and Referencing (TIGER) database. We will use this shapefile to plot our basemap when visualizing our area of analysis.\nCitation\n\n\nCode\nimport pandas as pd\nimport geopandas as gpd\n\n# Import CA shapefile as geopandas.GeoDataFrame\nca = gpd.read_file('https://data.ca.gov/dataset/e212e397-1277-4df3-8c22-40721b095f33/resource/3db1e426-fb51-44f5-82d5-a54d7c6e188b/download/ca-state-boundary.zip')\n\n\n\n\n\n\nWe’ll start by importing all our necessary libraries and functions for our analysis. Some of these packages we already imported before reading in our data, but we will again include them here just to remind us of all the packages that we are using.\n\n\nCode\n# General libraries and functions\nimport os\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.lines as mlines\n\n# Geospatial libraries and functions\nimport geopandas as gpd\nimport xarray as xr\nimport rioxarray as rioxr\nfrom shapely.geometry import box\nfrom shapely.geometry import Point\n\n\n\n\n\nNext, we reduce the size of the raster, which is stored in our Python environment as a xarray.DataArray named lulc. We want to remove these unnecessary raster componenets to simplify our Python environment, often helping our code run faster as well.\n\n\nCode\n# Remove band dimension\nlulc = lulc.squeeze()\n\n# Remove coordinates associated to band\nlulc = lulc.drop('band')"
  },
  {
    "objectID": "blog/2023-12-11-post/STAC-search.html#purpose",
    "href": "blog/2023-12-11-post/STAC-search.html#purpose",
    "title": "Land Cover Analysis of Mount Whitney surrounding area",
    "section": "",
    "text": "In this analysis, I’ll use a raster dataset from the U.S. Geological Survey (USGS) to extract land cover statistics in a small region surrounding Mount Whitney in California. The numbers contained in the raster represent land cover classification, so I will also have to use an accompanying CSV file from USGS that tells us what classes of land cover correspond to these numbers. I’ll also be creating a simple map showing the area of analysis relative to Mount Whitney. An analysis of this kind has potential use for government agencies seeking to better understand land cover in a region.\n\n\n\nMount Whitney"
  },
  {
    "objectID": "blog/2023-12-11-post/STAC-search.html#about",
    "href": "blog/2023-12-11-post/STAC-search.html#about",
    "title": "Land Cover Analysis of Mount Whitney surrounding area",
    "section": "",
    "text": "At an elevation of 14,505 feet above sea level, Mount Whitney is the tallest mountain in the contiguous United States. Located in the Sierra Nevada mountain range, Mount Whitney’s western slope and summit are located in Sequoia National Park, and the summit is also the southern terminus of the popular John Muir trail, which stretches over 200 miles from Yosemite Valley down to Mount Whitney. The eastern slope is part of the Inyo National Forest and is managed by the U.S. Forest Service."
  },
  {
    "objectID": "blog/2023-12-11-post/STAC-search.html#highlights-of-analysis",
    "href": "blog/2023-12-11-post/STAC-search.html#highlights-of-analysis",
    "title": "Land Cover Analysis of Mount Whitney surrounding area",
    "section": "",
    "text": "Exracting pixels per land cover class from raster dataset\nMarging extracted pixels with tabular dataset matching numeric codes to character strings\nCreating horizontal bar plot showing percent area of different land cover classes\nExtracting bounding box of raster dataset\nCreating map that shows area of land cover analysis relative to Mount Whitney with California boundaries as a basemap"
  },
  {
    "objectID": "blog/2023-12-11-post/STAC-search.html#data",
    "href": "blog/2023-12-11-post/STAC-search.html#data",
    "title": "Land Cover Analysis of Mount Whitney surrounding area",
    "section": "",
    "text": "The primary dataset that we will be working with comes from the 2011 National Terrestrial Ecosystems data, which was collected as part of the USGS Gap Analysis Project (GAP) by the U.S. Forest Service and Department of the Interior (2). For the purposes of this analysis, the full, nationwide dataset was pre-processed in Microsoft Planetary Computer to only include the area around Mount Whitney. With 30 meter by 30 meter pixel resolution, this raster dataset is a TIF file and contains numbers representing land cover classification.\nU.S. Geological Survey (USGS) Gap Analysis Project (GAP), 2016, GAP/LANDFIRE National Terrestrial Ecosystems 2011: U.S. Geological Survey data release, https://doi.org/10.5066/F7ZS2TM0.\n\n\nCode\nimport os\nimport xarray as xr\nimport rioxarray as rioxr\n\n# Import land cover TIF as xarray.DataArray\nlulc_fp = os.path.join(os.getcwd(),'..','data','2023-12-11-post-data','land_cover.tif')\nlulc = rioxr.open_rasterio(lulc_fp)\n\n\n\n\n\nOur second dataset is also from the 2011 National Terrestrial Ecosystems data and helps us make sense of data in the raster dataset. This tabular dataset is a CSV file and has the land cover classification names associated with each code used in the raster dataset. This dataset was accessed from the same online source as the raster dataset.\n\n\nCode\nimport pandas as pd\n\n# Import accompanying CSV as pandas.DataFrame\nclass_names = pd.read_csv('../data/2023-12-11-post-data/GAP_National_Terrestrial_Ecosystems.csv')\n\n\n\n\n\nThe final dataset that we will be using is a shapefile of California geographic boundaries, included in the U.S. Census Bureau’s 2016 Topologically Integrated Geographic Encoding and Referencing (TIGER) database. We will use this shapefile to plot our basemap when visualizing our area of analysis.\nCitation\n\n\nCode\nimport pandas as pd\nimport geopandas as gpd\n\n# Import CA shapefile as geopandas.GeoDataFrame\nca = gpd.read_file('https://data.ca.gov/dataset/e212e397-1277-4df3-8c22-40721b095f33/resource/3db1e426-fb51-44f5-82d5-a54d7c6e188b/download/ca-state-boundary.zip')"
  },
  {
    "objectID": "blog/2023-12-11-post/STAC-search.html#import-libraries-and-functions",
    "href": "blog/2023-12-11-post/STAC-search.html#import-libraries-and-functions",
    "title": "Land Cover Analysis of Mount Whitney surrounding area",
    "section": "",
    "text": "We’ll start by importing all our necessary libraries and functions for our analysis. Some of these packages we already imported before reading in our data, but we will again include them here just to remind us of all the packages that we are using.\n\n\nCode\n# General libraries and functions\nimport os\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.lines as mlines\n\n# Geospatial libraries and functions\nimport geopandas as gpd\nimport xarray as xr\nimport rioxarray as rioxr\nfrom shapely.geometry import box\nfrom shapely.geometry import Point"
  },
  {
    "objectID": "blog/2023-12-11-post/STAC-search.html#raster-reduction",
    "href": "blog/2023-12-11-post/STAC-search.html#raster-reduction",
    "title": "Land Cover Analysis of Mount Whitney surrounding area",
    "section": "",
    "text": "Next, we reduce the size of the raster, which is stored in our Python environment as a xarray.DataArray named lulc. We want to remove these unnecessary raster componenets to simplify our Python environment, often helping our code run faster as well.\n\n\nCode\n# Remove band dimension\nlulc = lulc.squeeze()\n\n# Remove coordinates associated to band\nlulc = lulc.drop('band')"
  },
  {
    "objectID": "blog/2023-12-11-post/STAC-search.html#calculate-percent-area-of-land-cover-classes",
    "href": "blog/2023-12-11-post/STAC-search.html#calculate-percent-area-of-land-cover-classes",
    "title": "Land Cover Analysis of Mount Whitney surrounding area",
    "section": "Calculate percent area of land cover classes",
    "text": "Calculate percent area of land cover classes\nNow that we are working with a reduced raster, we can move on to calculating percent area of the different land cover classes. To do this, we must extract the unique values contained in the lulc xarray.DataArray, in addition to the count of how many times each unique value appears in our raster. Since these codes correspond to land cover classes specified in our class_names pandas.DataFrame, we need to merge the extracted codes and counts with class_names, which requires storing our codes and counts as a pandas.DataFrame. Once we have this merged pandas.DataFrame, which we stored as classes, performing the actual calculation can be easily accomplished. We just use the count column in classes and size of lulc as object attributes.\n\n\nCode\n# Extract pixels per land cover class\ncodes, counts = np.unique(lulc, return_counts = True)\n\n# Create extracted pixels DataFrame\npix_counts = pd.DataFrame({'code': codes, 'count': counts})\n\n# Merge extracted pixels DataFrame with class names DataFrame\nclasses = pd.merge(pix_counts, class_names, on='code', how='inner')\n\n# Calculate the percentage of area covered by each class\nclasses['percentage'] = (classes['count'] / lulc.size) * 100"
  },
  {
    "objectID": "blog/2023-12-11-post/STAC-search.html#create-horizontal-bar-plot",
    "href": "blog/2023-12-11-post/STAC-search.html#create-horizontal-bar-plot",
    "title": "Land Cover Analysis of Mount Whitney surrounding area",
    "section": "Create horizontal bar plot",
    "text": "Create horizontal bar plot\nNext, we will our percent values with a horizontal bar plot, which shows us the percent for each land cover classification that takes up at least 1% of the area. We filter for just these land cover classes to reduce the amount of output, as it is likely irrelevant for an audience to see the percent for land cover classes that only take up a very small area. We also use the sort_values function, so we can plot our horizontal bars in ascending order, making our plot easier to interpret.\n\n\nCode\n# Filter for classes with more than 1% land cover\nfiltered_classes = classes[classes['percentage'] &gt; 1]\n\n# Sort classes in decreasing order of percentage\nsorted_classes = filtered_classes.sort_values(by='percentage', ascending=True)\n\n# Create a horizontal bar plot with axis label and title\nplt.barh(sorted_classes['class_label'], sorted_classes['percentage'], color='skyblue')\nplt.xlabel('Percent Area')\nplt.title('Land Cover Classes near Mount Whitney')\n\n# Show plot\nplt.show()"
  },
  {
    "objectID": "blog/2023-12-11-post/STAC-search.html#create-geodataframes-for-area-of-analysis-and-mount-whitney",
    "href": "blog/2023-12-11-post/STAC-search.html#create-geodataframes-for-area-of-analysis-and-mount-whitney",
    "title": "Land Cover Analysis of Mount Whitney surrounding area",
    "section": "Create GeoDataFrames for area of analysis and Mount Whitney",
    "text": "Create GeoDataFrames for area of analysis and Mount Whitney\nTo better understand our area of analysis relative to Mount Whitney, we want to plot the geographic coordinates of lulc and a point for Mount Whitney on the same map. To do this, we first extract the bounding box of lulc, which gives us four coordinate points that make up a rectangle denoting the area analyzed from our raster. In this case, we know that our raster area was a square, which means that extracting the bounding box does not include additional area that was not part of the analysis. Next, we convert these points into a shapely.Polygon, which then allows us to create a geopandas.GeoDataFrame containing this polygon. Lastley, we make another geopandas.GeoDataFrame that just contains a single point for Mount Whitney. We know to provide the coordinates for Mount Whitney in the EPSG:4326 Coordinate Reference System because this is the same CRS that is set for the USGS data that we read in as lulc.\n\n\nCode\n# Extract bounding box of LULC tile\nbbox_coords = lulc.rio.bounds()\n\n# Create shapely polygon from bounding box coordinates\nbbox_polygon = box(bbox_coords[0], bbox_coords[1], bbox_coords[2], bbox_coords[3])\n\n# Create GeoDataFrame for bounding box of LULC tile\nbbox = gpd.GeoDataFrame(geometry=[bbox_polygon], crs=lulc.rio.crs)\n\n# Create GeoDataFrame with a single point for Mount Whitney\nmt_whitney = gpd.GeoDataFrame(geometry=[Point(-118.2929, 36.5786)], crs='EPSG:4326')"
  },
  {
    "objectID": "blog/2023-12-11-post/STAC-search.html#plot-map-showing-area-of-land-cover-analysis-relative-to-mount-whitney",
    "href": "blog/2023-12-11-post/STAC-search.html#plot-map-showing-area-of-land-cover-analysis-relative-to-mount-whitney",
    "title": "Land Cover Analysis of Mount Whitney surrounding area",
    "section": "Plot map showing area of land cover analysis relative to Mount Whitney",
    "text": "Plot map showing area of land cover analysis relative to Mount Whitney\nAfter changing the CRS of bbox and ca to also match lulc, we can finally create our map showing the area of analysis relative to Mount Whitney!\n\n\nCode\n# Change CRS of LULC tile bounding box to EPSG:4326\nbbox.to_crs('EPSG:4326', inplace=True)\n\n# Change CRS of CA boundaries to EPSG:4326\nca.to_crs('EPSG:4326', inplace = True)\n\n# Initialize figure and axis\nfig, ax = plt.subplots(figsize=(8, 6))\n\n# Plot CA basemap, LULC tile bounding box, and Mount Whitney point\nca.plot(ax=ax, color='lightgray', edgecolor='black', alpha=0.5, label='California, US')\nbbox.plot(ax=ax, color='skyblue', edgecolor='black', alpha=0.5, label='LULC tile')\nmt_whitney.plot(ax=ax, marker='^', color='red', markersize=100, label='Mount Whitney')\n\n# Specify legend elements\nlegend_elements = [plt.Line2D([0], [0], color='lightgray', lw=5, label='California'),\n                   plt.Line2D([0], [0], color='skyblue', lw=5, label='LULC tile'),\n                   mlines.Line2D([0], [0], marker='^', color='w', markerfacecolor='red', markersize=10, label='Mount Whitney', linestyle='None')]\n\n# Add legend, title, and labels\nax.legend(handles=legend_elements, loc='upper right')\nplt.title('Area of Land Cover Analysis')\nplt.xlabel('Latitude')\nplt.ylabel('Longitude')\n\n# Show plot\nplt.show()"
  },
  {
    "objectID": "blog/2023-12-11-post/mt-whitney-land-cover.html",
    "href": "blog/2023-12-11-post/mt-whitney-land-cover.html",
    "title": "Land cover analysis around Mount Whitney",
    "section": "",
    "text": "In this analysis, we will use a raster dataset from the U.S. Geological Survey (USGS) to extract land cover statistics in a small region surrounding Mount Whitney in California. We will also be creating a simple map showing the area of analysis relative to Mount Whitney. An analysis of this kind has potential use for government agencies seeking to better understand land cover in a region.\n\nPenny Higgins, CC BY-SA 2.0, via Wikimedia Commons\n\n\n\nAt an elevation of 14,505 feet above sea level, Mount Whitney is the tallest mountain in the contiguous United States (Sierra Nevada Geotourism 2023). Located in the Sierra Nevada mountain range, Mount Whitney’s western slope and summit are located in Sequoia National Park, and the summit is also the southern terminus of the popular John Muir trail, which stretches over 200 miles from Yosemite Valley down to Mount Whitney. The eastern slope is part of the Inyo National Forest and is managed by the U.S. Forest Service.\n\n\n\n\nExracting pixels per land cover class from raster dataset\nMarging extracted pixels with tabular dataset matching numeric codes to character strings\nCreating horizontal bar plot showing percent area of different land cover classes\nExtracting bounding box of raster dataset\nCreating map that shows area of land cover analysis relative to Mount Whitney with California boundaries as a basemap\n\n\n\n\n\n\nThe primary dataset that we will be working with comes from the 2011 National Terrestrial Ecosystems data, which was collected as part of the USGS Gap Analysis Project (GAP) by the U.S. Forest Service and Department of the Interior (U.S. Geological Survey 2016). For the purposes of this analysis, the full, nationwide dataset was pre-processed in Microsoft Planetary Computer to only include the area around Mount Whitney. With 30 meter by 30 meter pixel resolution, this raster dataset is a TIF file and contains numbers representing land cover classification.\n\n\nCode\nimport os\nimport xarray as xr\nimport rioxarray as rioxr\n\n# Import land cover TIF as xarray.DataArray\nlulc_fp = os.path.join(os.getcwd(),'..','..','data','2023-12-11-post-data','land_cover.tif')\nlulc = rioxr.open_rasterio(lulc_fp)\n\n\n\n\n\nOur second dataset is also from the 2011 National Terrestrial Ecosystems data and helps us make sense of data in the raster dataset. This tabular dataset is a CSV file and has the land cover classification names associated with each code used in the raster dataset. This dataset was accessed from the same online source as the raster dataset (U.S. Geological Survey 2016).\n\n\nCode\nimport pandas as pd\n\n# Import accompanying CSV as pandas.DataFrame\nclass_names = pd.read_csv('../../data/2023-12-11-post-data/GAP_National_Terrestrial_Ecosystems.csv')\n\n\n\n\n\nThe final dataset that we will be using is a shapefile of California geographic boundaries, included in the U.S. Census Bureau’s 2016 Topologically Integrated Geographic Encoding and Referencing (TIGER) database (California Open Data 2019). We will use this shapefile to plot our basemap when visualizing our area of analysis.\n\n\nCode\nimport pandas as pd\nimport geopandas as gpd\n\n# Import CA shapefile as geopandas.GeoDataFrame\nca = gpd.read_file('https://data.ca.gov/dataset/e212e397-1277-4df3-8c22-40721b095f33/resource/3db1e426-fb51-44f5-82d5-a54d7c6e188b/download/ca-state-boundary.zip')\n\n\n\n\n\n\nWe’ll start by importing all our necessary libraries and functions for our analysis. Some of these packages we already imported before reading in our data, but we will again include them here just to remind us of all the packages that we are using.\n\n\nCode\n# General libraries and functions\nimport os\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.lines as mlines\n\n# Geospatial libraries and functions\nimport geopandas as gpd\nimport xarray as xr\nimport rioxarray as rioxr\nfrom shapely.geometry import box\nfrom shapely.geometry import Point\n\n\n\n\n\nNext, we reduce the size of the raster, which is stored in our Python environment as a xarray.DataArray named lulc. We want to remove these unnecessary raster componenets to simplify our Python environment, often helping our code run faster as well.\n\n\nCode\n# Remove band dimension\nlulc = lulc.squeeze()\n\n# Remove coordinates associated to band\nlulc = lulc.drop('band')"
  },
  {
    "objectID": "blog/2023-12-11-post/mt-whitney-land-cover.html#purpose",
    "href": "blog/2023-12-11-post/mt-whitney-land-cover.html#purpose",
    "title": "Land cover analysis around Mount Whitney",
    "section": "Purpose",
    "text": "Purpose\nIn this analysis, we will use a raster dataset from the U.S. Geological Survey (USGS) to extract land cover statistics in a small region surrounding Mount Whitney in California. We will also be creating a simple map showing the area of analysis relative to Mount Whitney. An analysis of this kind has potential use for environmental planners seeking to better understand land cover in a region.\n\nPenny Higgins, CC BY-SA 2.0, via Wikimedia Commons"
  },
  {
    "objectID": "blog/2023-12-11-post/mt-whitney-land-cover.html#about",
    "href": "blog/2023-12-11-post/mt-whitney-land-cover.html#about",
    "title": "Land cover analysis around Mount Whitney",
    "section": "About",
    "text": "About\nAt an elevation of 14,505 feet above sea level, Mount Whitney is the tallest mountain in the contiguous United States (Sierra Nevada Geotourism 2023). Located in the Sierra Nevada mountain range, Mount Whitney’s western slope and summit are located in Sequoia National Park, and the summit is also the southern terminus of the popular John Muir trail, which stretches over 200 miles from Yosemite Valley down to Mount Whitney. The eastern slope is part of the Inyo National Forest and is managed by the U.S. Forest Service."
  },
  {
    "objectID": "blog/2023-12-11-post/mt-whitney-land-cover.html#highlights-of-analysis",
    "href": "blog/2023-12-11-post/mt-whitney-land-cover.html#highlights-of-analysis",
    "title": "Land cover analysis around Mount Whitney",
    "section": "Highlights of analysis",
    "text": "Highlights of analysis\n\nExracting pixels per land cover class from raster dataset\nMerging extracted pixels with tabular dataset matching numeric codes to character strings\nCreating horizontal bar plot showing percent area of different land cover classes\nExtracting bounding box of raster dataset\nCreating map that shows area of land cover analysis relative to Mount Whitney with California boundaries as a basemap"
  },
  {
    "objectID": "blog/2023-12-11-post/mt-whitney-land-cover.html#data",
    "href": "blog/2023-12-11-post/mt-whitney-land-cover.html#data",
    "title": "Land cover analysis around Mount Whitney",
    "section": "",
    "text": "The primary dataset that we will be working with comes from the 2011 National Terrestrial Ecosystems data, which was collected as part of the USGS Gap Analysis Project (GAP) by the U.S. Forest Service and Department of the Interior (U.S. Geological Survey 2016). For the purposes of this analysis, the full, nationwide dataset was pre-processed in Microsoft Planetary Computer to only include the area around Mount Whitney. With 30 meter by 30 meter pixel resolution, this raster dataset is a TIF file and contains numbers representing land cover classification.\n\n\nCode\nimport os\nimport xarray as xr\nimport rioxarray as rioxr\n\n# Import land cover TIF as xarray.DataArray\nlulc_fp = os.path.join(os.getcwd(),'..','..','data','2023-12-11-post-data','land_cover.tif')\nlulc = rioxr.open_rasterio(lulc_fp)\n\n\n\n\n\nOur second dataset is also from the 2011 National Terrestrial Ecosystems data and helps us make sense of data in the raster dataset. This tabular dataset is a CSV file and has the land cover classification names associated with each code used in the raster dataset. This dataset was accessed from the same online source as the raster dataset (U.S. Geological Survey 2016).\n\n\nCode\nimport pandas as pd\n\n# Import accompanying CSV as pandas.DataFrame\nclass_names = pd.read_csv('../../data/2023-12-11-post-data/GAP_National_Terrestrial_Ecosystems.csv')\n\n\n\n\n\nThe final dataset that we will be using is a shapefile of California geographic boundaries, included in the U.S. Census Bureau’s 2016 Topologically Integrated Geographic Encoding and Referencing (TIGER) database (California Open Data 2019). We will use this shapefile to plot our basemap when visualizing our area of analysis.\n\n\nCode\nimport pandas as pd\nimport geopandas as gpd\n\n# Import CA shapefile as geopandas.GeoDataFrame\nca = gpd.read_file('https://data.ca.gov/dataset/e212e397-1277-4df3-8c22-40721b095f33/resource/3db1e426-fb51-44f5-82d5-a54d7c6e188b/download/ca-state-boundary.zip')"
  },
  {
    "objectID": "blog/2023-12-11-post/mt-whitney-land-cover.html#import-libraries-and-functions",
    "href": "blog/2023-12-11-post/mt-whitney-land-cover.html#import-libraries-and-functions",
    "title": "Land cover analysis around Mount Whitney",
    "section": "2) Import libraries and functions",
    "text": "2) Import libraries and functions\nWe’ll start by importing all our necessary libraries and functions for our analysis. Some of these packages we already imported before reading in our data, but we will again include them here just to remind us of all the packages that we are using.\n\n\nCode\n# General libraries and functions\nimport os\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.lines as mlines\n\n# Geospatial libraries and functions\nimport geopandas as gpd\nimport xarray as xr\nimport rioxarray as rioxr\nfrom shapely.geometry import box\nfrom shapely.geometry import Point"
  },
  {
    "objectID": "blog/2023-12-11-post/mt-whitney-land-cover.html#raster-reduction",
    "href": "blog/2023-12-11-post/mt-whitney-land-cover.html#raster-reduction",
    "title": "Land cover analysis around Mount Whitney",
    "section": "3) Raster reduction",
    "text": "3) Raster reduction\nNext, we reduce the size of the raster, which is stored in our Python environment as a xarray.DataArray named lulc. We want to remove these unnecessary raster componenets to simplify our Python environment, often helping our code run faster as well.\n\n\nCode\n# Remove band dimension\nlulc = lulc.squeeze()\n\n# Remove coordinates associated to band\nlulc = lulc.drop('band')"
  },
  {
    "objectID": "blog/2023-12-11-post/mt-whitney-land-cover.html#calculate-percent-area-of-land-cover-classes",
    "href": "blog/2023-12-11-post/mt-whitney-land-cover.html#calculate-percent-area-of-land-cover-classes",
    "title": "Land cover analysis around Mount Whitney",
    "section": "4) Calculate percent area of land cover classes",
    "text": "4) Calculate percent area of land cover classes\nNow that we are working with a reduced raster, we can move on to calculating percent area of the different land cover classes. To do this, we must extract the unique values contained in the lulc xarray.DataArray, in addition to the count of how many times each unique value appears in our raster. Since these codes correspond to land cover classes specified in our class_names pandas.DataFrame, we need to merge the extracted codes and counts with class_names, which requires storing our codes and counts as a pandas.DataFrame. Once we have this merged pandas.DataFrame, which we stored as classes, performing the actual calculation can be easily accomplished. We just use the count column in classes and size of lulc as object attributes.\n\n\nCode\n# Extract pixels per land cover class\ncodes, counts = np.unique(lulc, return_counts = True)\n\n# Create extracted pixels DataFrame\npix_counts = pd.DataFrame({'code': codes, 'count': counts})\n\n# Merge extracted pixels DataFrame with class names DataFrame\nclasses = pd.merge(pix_counts, class_names, on='code', how='inner')\n\n# Calculate the percentage of area covered by each class\nclasses['percentage'] = (classes['count'] / lulc.size) * 100"
  },
  {
    "objectID": "blog/2023-12-11-post/mt-whitney-land-cover.html#create-horizontal-bar-plot",
    "href": "blog/2023-12-11-post/mt-whitney-land-cover.html#create-horizontal-bar-plot",
    "title": "Land cover analysis around Mount Whitney",
    "section": "5) Create horizontal bar plot",
    "text": "5) Create horizontal bar plot\nNext, we will visualize our percent values with a horizontal bar plot, which shows us the percent for each land cover classification that takes up at least 1% of the area. We filter for just these land cover classes to reduce the amount of output, as it is likely irrelevant for an audience to see the percent for land cover classes that only take up a very small area. We also use the sort_values function, so we can plot our horizontal bars in ascending order, making our plot easier to interpret.\n\n\nCode\n# Filter for classes with more than 1% land cover\nfiltered_classes = classes[classes['percentage'] &gt; 1]\n\n# Sort classes in decreasing order of percentage\nsorted_classes = filtered_classes.sort_values(by='percentage', ascending=True)\n\n# Create a horizontal bar plot with axis label and title\nplt.barh(sorted_classes['class_label'], sorted_classes['percentage'], color='skyblue')\nplt.xlabel('Percent Area')\nplt.title('Land Cover Classes around Mount Whitney')\n\n# Show plot\nplt.show()\n\n\n\n\n\nThe horizontal bar plot shows the percent area of different land cover classes in the area around Mount Whitney. Of any one class, Mediterrabean California Alpine Bedrock and Scree takes up the most land, constituting just over 15% of the analysis area. California Central Valley and Southern Coastal Grassland, Sierra Nevada Subalpine Lodgepole Pine Forest and Woodland, and Mediterranean California Mesic Mixed Conifer Forest and Woodland each make up about 8-10% of the area. Several other land cover classifications make up less than 8% of the area."
  },
  {
    "objectID": "blog/2023-12-11-post/mt-whitney-land-cover.html#create-geodataframes-for-area-of-analysis-and-mount-whitney",
    "href": "blog/2023-12-11-post/mt-whitney-land-cover.html#create-geodataframes-for-area-of-analysis-and-mount-whitney",
    "title": "Land cover analysis around Mount Whitney",
    "section": "6) Create GeoDataFrames for area of analysis and Mount Whitney",
    "text": "6) Create GeoDataFrames for area of analysis and Mount Whitney\nTo better understand our area of analysis relative to Mount Whitney, we want to plot the geographic coordinates of lulc and a point for Mount Whitney on the same map. To do this, we first extract the bounding box of lulc, which gives us four coordinate points that make up a rectangle denoting the area analyzed from our raster. In this case, we know that our raster area was a square, which means that extracting the bounding box does not include additional area that was not part of the analysis. Next, we convert these points into a shapely.Polygon, which then allows us to create a geopandas.GeoDataFrame containing this polygon. Lastley, we make another geopandas.GeoDataFrame that just contains a single point for Mount Whitney. We know to provide the coordinates for Mount Whitney in the EPSG:4326 Coordinate Reference System because this is the same CRS that is set for the USGS data that we read in as lulc.\n\n\nCode\n# Extract bounding box of LULC tile\nbbox_coords = lulc.rio.bounds()\n\n# Create shapely polygon from bounding box coordinates\nbbox_polygon = box(bbox_coords[0], bbox_coords[1], bbox_coords[2], bbox_coords[3])\n\n# Create GeoDataFrame for bounding box of LULC tile\nbbox = gpd.GeoDataFrame(geometry=[bbox_polygon], crs=lulc.rio.crs)\n\n# Create GeoDataFrame with a single point for Mount Whitney\nmt_whitney = gpd.GeoDataFrame(geometry=[Point(-118.2929, 36.5786)], crs='EPSG:4326')"
  },
  {
    "objectID": "blog/2023-12-11-post/mt-whitney-land-cover.html#plot-map-showing-area-of-land-cover-analysis-relative-to-mount-whitney",
    "href": "blog/2023-12-11-post/mt-whitney-land-cover.html#plot-map-showing-area-of-land-cover-analysis-relative-to-mount-whitney",
    "title": "Land cover analysis around Mount Whitney",
    "section": "7) Plot map showing area of land cover analysis relative to Mount Whitney",
    "text": "7) Plot map showing area of land cover analysis relative to Mount Whitney\nAfter changing the CRS of bbox and ca to also match lulc, we can finally create our map showing the area of analysis relative to Mount Whitney!\n\n\nCode\n# Change CRS of LULC tile bounding box to EPSG:4326\nbbox.to_crs('EPSG:4326', inplace=True)\n\n# Change CRS of CA boundaries to EPSG:4326\nca.to_crs('EPSG:4326', inplace = True)\n\n# Initialize figure and axis\nfig, ax = plt.subplots(figsize=(8, 6))\n\n# Plot CA basemap, LULC tile bounding box, and Mount Whitney point\nca.plot(ax=ax, color='lightgray', edgecolor='black', alpha=0.5, label='California, US')\nbbox.plot(ax=ax, color='skyblue', edgecolor='black', alpha=0.5, label='Area of analysis')\nmt_whitney.plot(ax=ax, marker='^', color='red', markersize=100, label='Mount Whitney')\n\n# Specify legend elements\nlegend_elements = [plt.Line2D([0], [0], color='lightgray', lw=5, label='California'),\n                   plt.Line2D([0], [0], color='skyblue', lw=5, label='Area of analysis'),\n                   mlines.Line2D([0], [0], marker='^', color='w', markerfacecolor='red', markersize=10, label='Mount Whitney', linestyle='None')]\n\n# Add legend, title, and labels\nax.legend(handles=legend_elements, loc='upper right')\nplt.xlabel('Latitude')\nplt.ylabel('Longitude')\n\n# Show plot\nplt.show()\n\n\n\n\n\nThis map shows our area of land cover analysis in relation to Mount Whitney."
  },
  {
    "objectID": "blog/2023-12-11-post/mt-whitney-land-cover.html#link-to-github-repository",
    "href": "blog/2023-12-11-post/mt-whitney-land-cover.html#link-to-github-repository",
    "title": "Land Cover Analysis around Mount Whitney",
    "section": "",
    "text": "https://github.com/linusghanadan/mt_whitney_land_cover ## Purpose In this analysis, I’ll use a raster dataset from the U.S. Geological Survey (USGS) to extract land cover statistics in a small region surrounding Mount Whitney in California. The numbers contained in the raster represent land cover classification, so I will also have to use an accompanying CSV file from USGS that tells us what classes of land cover correspond to these numbers. I’ll also be creating a simple map showing the area of analysis relative to Mount Whitney. An analysis of this kind has potential use for government agencies seeking to better understand land cover in a region.\n\n\n\nMount Whitney"
  },
  {
    "objectID": "blog/2023-12-12-post/index.html",
    "href": "blog/2023-12-12-post/index.html",
    "title": "Time series analysis of nitrogen and phosphorus concentrations in Chesapeake Bay tidal regions since 2010 introduction of TMDL requirements",
    "section": "",
    "text": "Since the 2010 introduction of TMDL requirements, what seasonal and non-seasonal trends are present for nitrogen and phosphorus concentrations in Chesapeake Bay tidal regions?"
  },
  {
    "objectID": "blog/2023-12-12-post/index.html#question",
    "href": "blog/2023-12-12-post/index.html#question",
    "title": "Time series analysis of nutrient pollution in Chesapeake Bay tidal regions",
    "section": "Question",
    "text": "Question\nSince the 2010 introduction of Total Maximum Daily Load (TMDL) requirements, what seasonal and non-seasonal trends are present for nitrogen and phosphorus concentrations in Chesapeake Bay tidal regions?"
  },
  {
    "objectID": "blog/2023-12-12-post/index.html#introduction",
    "href": "blog/2023-12-12-post/index.html#introduction",
    "title": "Time series analysis of nutrient pollution in Chesapeake Bay tidal regions",
    "section": "Introduction",
    "text": "Introduction\nThe Chesapeake Bay is the largest estuary in the United States, and the largest body of water that is regulated under the Clean Water Act (U.S. Environmental Protection Agency 2023). Federal regulation pertaining to the Bay took decades to implement, and this is in large part because of the Bay’s large size and the many stakeholders involved. In the 1970s, the Bay was identified as one of the first areas in the world to have a marine dead zone, a phenomenon that literally suffocates aquatic life due to lack of oxygen in the water. Despite dead zones being identified in the 1970s, it was not until 2000 that the Bay was designated as an “impaired water” under the Clean Water Act. Then, it took another ten years, until 2010, for the EPA to take the next step of issuing Total Maximum Daily Load (TMDL) requirements, the regulatory action mandating water quality improvement.\nSpecifically, a TMDL is the maximum amount of a particular pollutant that a body of water can receive and still meet applicable water quality standards (U.S. Environmental Protection Agency 2023). This maximum amount is calculated in pounds based on measurements taken at areas where pollution is likely to end up in the Bay. In their 2010 regulation, the EPA established TMDL requirements for nitrogen, phosphorus, and sediment. Nitrogen and phosphorus, referred to as nutrients because of their role in providing nutrition to many animals and plants, cause algal blooms, which cause marine dead zones through taking in dissolved oxygen and blocking sunlight. Sediment contributes to dead zones by blocking sunlight as well, leading it to also be included in the 2010 TMDL requirements.\nThis analysis will focus on nitrogen and phosphorus, the two pollutants responsible for algal blooms in the Chesapeake Bay. A 2022 study found that agricultural runoff was the largest source of nutrient pollution, accounting for 48% of nitrogen and 27% of phosphorus in the Chesapeake Bay (Chesapeake Progress, n.d.). Both of these pollutants also get to the Bay as a result of urban and suburban runoff, wastewater treatment plants releasing treated water, and natural sources (e.g., runoff from forests, wetlands, etc.). In addition, about 25% of nitrogen that ends up in the Bay comes from air pollution that is originally emitted to the atmosphere by sources such as cars and factories (Burns et al. 2021). Through a process called atmospheric deposition, these nitrogen compounds react with other chemicals to become nitrous oxides, which can be deposited back to Earth’s surface through precipitation or as dry deposition.\nThrough conducting a time series analysis of post-2010 nitrogen and phosphorus concentration measurements, my goal is to better understand how concentrations have changed since the introduction of TMDL requirements. I’m also interested in the nature of any seasonality and whether the three time series components (i.e., seasonal, trend, and random) are consistent across both nitrogen and phosphorus."
  },
  {
    "objectID": "blog/2023-12-12-post/index.html#data",
    "href": "blog/2023-12-12-post/index.html#data",
    "title": "Time series analysis of nutrient pollution in Chesapeake Bay tidal regions",
    "section": "Data",
    "text": "Data\nYearly water quality data on the Chesapeake Bay’s tidal and non-tidal regions going back to 1984 is publicly available on the Chesapeake Bay Program (CBP) DataHub (Chesapeake Bay Program DataHub, n.d.). Data is organized into either Tier 1, 2, or 3 depending on how it was collected. While Tier 1 and 2 data can be collected by any interested group, Tier 3 data is collected by monitoring stations overseen by experienced professionals. Only Tier 3 data can be used for governmental regulatory assessments.\nFor my analysis, I will be using 2010 to 2019 Tier 3 data collected at 143 different monitoring stations positioned throughout the Chesapeake Bay tidal regions, which includes the mainstem Bay and tributary components. Across the 10 years that we are looking at, we’ll have a total of 43,809 nitrogen observations and 43,590 phosphorus observations.\nBelow, we import the R packages used in this analysis. Then, we read in the yearly water quality data using their CBP DataHub URL. We also process the data by creating separate data.frames for total nitrogen and phosphorus measurements.\n\n\nCode\n# Import necessary R packages\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(tsibble)\nlibrary(feasts)\nlibrary(generics)\nlibrary(stargazer)\n\n# Create a vector of data URLs\nexcel_urls &lt;- c(\n  'https://datahub-content.chesapeakebay.net/traditional_annual_tidal_02jun21/2019_CEDR_tidal_data_01jun21.xlsx',\n  'https://datahub-content.chesapeakebay.net/traditional_annual_tidal_02jun21/2018_CEDR_tidal_data_01jun21.xlsx',\n  'https://datahub-content.chesapeakebay.net/traditional_annual_tidal_02jun21/2017_CEDR_tidal_data_11oct18.xlsx',\n  'https://datahub-content.chesapeakebay.net/traditional_annual_tidal_02jun21/2016_CEDR_tidal_data_15jun17.xlsx',\n  'https://datahub-content.chesapeakebay.net/traditional_annual_tidal_02jun21/2015_CEDR_tidal_data_15jun17.xlsx',\n  'https://datahub-content.chesapeakebay.net/traditional_annual_tidal_02jun21/2014_CEDR_tidal_data_15jun17.xlsx',\n  'https://datahub-content.chesapeakebay.net/traditional_annual_tidal_02jun21/2013_CEDR_tidal_data_15jun17.xlsx',\n  'https://datahub-content.chesapeakebay.net/traditional_annual_tidal_02jun21/2012_CEDR_tidal_data_15jun17.xlsx',\n  'https://datahub-content.chesapeakebay.net/traditional_annual_tidal_02jun21/2011_CEDR_tidal_data_15jun17.xlsx',\n  'https://datahub-content.chesapeakebay.net/traditional_annual_tidal_02jun21/2010_CEDR_tidal_data_15jun17.xlsx')\n\n# Create a temporary directory to store downloaded files\ntemp_dir &lt;- tempdir()\n\n# Create an empty list to store data frames\ndfs &lt;- list()\n\n# Loop through each URL, extract file name, define local file path, download file, read into R, and append to list of data frames\nfor (url in excel_urls) {\n  file_name &lt;- basename(url)\n  local_path &lt;- file.path(temp_dir, file_name)\n  download.file(url, destfile = local_path, mode = \"wb\")\n  wq_data &lt;- readxl::read_excel(local_path, sheet = 1)\n  dfs[[file_name]] &lt;- wq_data\n}\n\n# Combine all data frames into a single data frame\nwq_data_combined &lt;- bind_rows(dfs)\n\n# Wrangle data for relevant column variables, and filter for TN (total nitrogen)\nnitr_data &lt;- wq_data_combined %&gt;%\n  dplyr::select(\"MonitoringLocation\", \"SampleDate\", \"Parameter\", \"MeasureValue\", \"Unit\", \"Latitude\", \"Longitude\") %&gt;% \n  filter(Parameter==\"TN\")\n\n# Wrangle data for relevant column variables, and filter for TP (total phosphorus)\nphos_data &lt;- wq_data_combined %&gt;%\n  dplyr::select(\"MonitoringLocation\", \"SampleDate\", \"Parameter\", \"MeasureValue\", \"Unit\", \"Latitude\", \"Longitude\") %&gt;% \n  filter(Parameter==\"TP\")\n\n# Remove unnecessary data and values from environment\nrm(wq_data, wq_data_combined, dfs)\nrm(excel_urls, file_name, local_path, temp_dir, url)"
  },
  {
    "objectID": "blog/2023-12-12-post/index.html#methods",
    "href": "blog/2023-12-12-post/index.html#methods",
    "title": "Time series analysis of nutrient pollution in Chesapeake Bay tidal regions",
    "section": "Methods",
    "text": "Methods\n\nAutocorrelation function\nThe autocorrelation function calculates the correlation between the dependent variable at a given point in time and various time lags for this same variable. Thus, the autocorrelation function provides us with a tool that allows us to better understand any seasonal trends present in our data. This will be useful for us in subsequent steps of our time series analysis.\n\n\nSTL decomposition\nAs a core part of this time series analysis, I’ll be constructing a seasonal trend decomposition using locally estimated scatterplot smoothing (LOESS), which is often abbreviated as a STL decomposition model. STL allows us to separate our monthly average concentrations into three components: seasonal trend, non-seasonal trend, and remainder. Through plotting these components next to each other, we gain a more intuitive understanding of the underlying forces contributing to variation in our dependent variable, which in this case is the monthly average concentration.\nAs opposed to other decomposition methods, one thing that is particular to STL models is the ability to specify the length of a season. It can be helpful to adjust this input depending on our desired level of smoothing for the non-seasonal trend. We will use our results from the autocorrelation function to inform our chosen length of seasons. The autocorrelation function is useful in this context because it can tell us after how many lags we see a drop-off in correlation, indicating there is a drop in the significance of the seasonal trend."
  },
  {
    "objectID": "blog/2023-12-12-post/index.html#results",
    "href": "blog/2023-12-12-post/index.html#results",
    "title": "Time series analysis of nutrient pollution in Chesapeake Bay tidal regions",
    "section": "Results",
    "text": "Results\n\nAutocorrelation function\n\n\nCode\n# Plot autocorrelation function for nitrogen with lags going back three years\nacf(nitr_monthly_avgs_ts, lag.max = 36, i=2)\n\n\n\n\n\nLooking at this autocorrelation plot for nitrogen, I see that the t-16 lag is significant at the alpha equals 0.05 level, indicated by the black line extending beyond the blue dashed line. Meanwhile, the t-4 lag is not statistically significant. The rest of the lags remain the same or slightly decrease when comparing from the first and second year of lags. In the third year, there is a drop off in the t-28 lag compared to t-12, and there continues to be what seems like a marginal decrease in correlation across most lags. Considering all of this, I decided to set the seasonality of my STL model for nitrogen to 24 months.\n\n\nCode\n# Plot autocorrelation function for phosphorus with lags going back three years\nacf(phos_monthly_avgs_ts, lag.max = 36, i = 2)\n\n\n\n\n\nFor phosphorus, there is a very consistent marginal decline for each set of lags over the course of the three years. This is good news for our STL because it means that the seasonal trend will be easier to separate from the non-seasonal trend. Like I did with nitrogen, I’m also going to use two-year seasons for phosphorus. Similar to the case with nitrogen, it seems to me like the drop-off in lag correlations from year two to year three is a bit larger than from year one to year two. This suggests that a two-year seasonal cycle will give us an informative non-seasonal trend component that is neither too eager nor too hesitant to categorize differences as non-seasonal trends.\n\n\nSTL decomposition\n\n\nCode\n# Conduct STL for nitrogen with two-year seasons, and extract components\nnitr_decomp &lt;- nitr_monthly_avgs_ts %&gt;%\n  fabletools::model(feasts::STL(monthly_avg, t.window = 24)) %&gt;% \n  generics::components()\n\n# Plot STL model\nautoplot(nitr_decomp) +\n  labs(title = \"STL model of nitrogen concentration\", x = \"Year Month\")\n\n\n\n\n\nIn this plot of the three STL components for nitrogen, it is still difficult to see a long-term trend, despite the line being fairly smooth. There does seem to be a slight downward trend until 2018. From 2018 to 2019, there is a clear increase, but this change is then offset by an equivalent decrease over the course of 2019 to 2020. In addition the grey bars on the left all represent the same range, implying that the remainder components of our STL model contributed the most to variation in nitrogen concentration. However, this seems to be very influenced by the high spike in 2014.\n\n\nCode\n# Conduct STL for phosphorus with two-year seasons, and extract components\nphos_decomp &lt;- phos_monthly_avgs_ts %&gt;%\n  fabletools::model(feasts::STL(monthly_avg, t.window = 24)) %&gt;% \n  generics::components()\n\n# Plot STL model\nautoplot(phos_decomp) +\n  labs(title = \"STL model of phosphorus concentration\", x = \"Year Month\")\n\n\n\n\n\nThe STL plot for phosphorus does make it seem like there is a long-term downward trend, but it is difficult to tell how significant it is because of the long grey bar, which indicates it is least influential of the three components in our STL model. In this case, the grey bars show us that seasonality contributes the most to the variation in phosphorus concentration.\n\n\nCode\n# For nitrogen, plot monthly mean, seasonally adjusted monthly mean, STL seasonality, and STL trend\nggplot(nitr_monthly_avgs_df, aes(yr_mo)) +\n  scale_x_date(date_breaks = \"1 year\", date_minor_breaks = \"6 months\", date_labels = \"%Y-%m\") +\n  geom_line(aes(y=nitr_decomp$monthly_avg, color = \"Monthly mean\")) +\n  geom_line(aes(y=nitr_decomp$season_adjust, color = \"Seasonally adjusted monthly mean\"), linewidth=2) +\n  geom_line(aes(y=nitr_decomp$trend, color = \"STL trend\"), linewidth = 2) +\n  geom_line(aes(y=nitr_decomp$season_year, color = \"STL seasonality\")) +\n  labs(x = 'Year-Month',\n       y = 'Concentration (mg/L)',\n       title = \"Nitrogen in Chesapeake Bay (2010-2019)\") +\n  scale_color_manual(name = \"\", values = c(\"Monthly mean\" = \"black\", \"Seasonally adjusted monthly mean\" = \"cornflowerblue\", \"STL seasonality\" = \"seagreen\", \"STL trend\" = \"red\"), breaks = c(\"Monthly mean\", \"Seasonally adjusted monthly mean\", \"STL seasonality\", \"STL trend\")) +\n  theme_bw() +\n  theme(legend.position = \"top\", plot.title = element_text(hjust = 0.5))\n\n\n\n\n\nI decided to make this visualization to get a better idea of exactly how these components map on to each other. This plot seems to confirm the idea of negligible trend for nitrogen. Since the x-axis is labeled for each year here, it is also easier to see the seasonal trend. Each year, nitrogen concentrations increase sharply around December. They then peak around February to March, before decreasing substantially and reaching their minimum around July.\n\n\nCode\n# For phosphorus, plot monthly mean, seasonally adjusted monthly mean, STL seasonality, and STL trend\nggplot(phos_monthly_avgs_df, aes(yr_mo)) +\n  scale_x_date(date_breaks = \"1 year\", date_minor_breaks = \"6 months\", date_labels = \"%Y-%m\") +\n  geom_line(aes(y=phos_decomp$monthly_avg, color = \"Monthly mean\")) +\n  geom_line(aes(y=phos_decomp$season_adjust, color = \"Seasonally adjusted monthly mean\"), linewidth=2) +\n  geom_line(aes(y=phos_decomp$trend, color = \"STL trend\"), linewidth = 2) +\n  geom_line(aes(y=phos_decomp$season_year, color = \"STL seasonality\")) +\n  labs(x = 'Year-Month',\n       y = 'Concentration (mg/L)',\n       title = \"Phosphorus in Chesapeake Bay (2010-2019)\") +\n  scale_color_manual(name = \"\", values = c(\"Monthly mean\" = \"black\", \"Seasonally adjusted monthly mean\" = \"cornflowerblue\", \"STL seasonality\" = \"seagreen\", \"STL trend\" = \"red\"), breaks = c(\"Monthly mean\", \"Seasonally adjusted monthly mean\", \"STL seasonality\", \"STL trend\")) +\n  theme_bw() +\n  theme(legend.position = \"top\", plot.title = element_text(hjust = 0.5))\n\n\n\n\n\nOur plot for phosphorus further supports the idea that there is a slight downward trend over the decade. If you independently trace the maximums or minimums, the line does seem to be moving downward at an oscillating but fairly consistent rate. Unlike nitrogen, phosphorus concentrations shoot up in the middle of the year around May, have a relatively flat peak lasting from June to August, and then shoot down at the end of Summer.\n\n\nSimple linear regressions based on STL model parameters\n\nCode\n# Run regression of season component on monthly average nitrogen\nnitr_season_reg &lt;- lm(monthly_avg ~ season_year, data = nitr_decomp)\n\n# Print the formatted regression table\nstargazer(nitr_season_reg, title = \"Regression of monthly nitrogen concentration against seasonal trend component\", align = TRUE, digits = 3, type = 'html', notes.append = FALSE, notes = \"[***]p&lt;0.01\")\n\n\n\n\nRegression of monthly nitrogen concentration against seasonal trend component\n\n\n\n\n\n\n\n\n\nDependent variable:\n\n\n\n\n\n\n\n\n\n\n\n\nmonthly_avg\n\n\n\n\n\n\n\n\nseason_year\n\n\n1.038***\n\n\n\n\n\n\n(0.086)\n\n\n\n\n\n\n\n\n\n\nConstant\n\n\n0.898***\n\n\n\n\n\n\n(0.010)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObservations\n\n\n120\n\n\n\n\nR2\n\n\n0.551\n\n\n\n\nAdjusted R2\n\n\n0.547\n\n\n\n\nResidual Std. Error\n\n\n0.113 (df = 118)\n\n\n\n\nF Statistic\n\n\n144.981*** (df = 1; 118)\n\n\n\n\n\n\n\n\nNote:\n\n\n[***]p&lt;0.01\n\n\n\n\nThe adjusted R-squared of 0.55 indicates that seasonal trends can explain a bit over half (55%) of the variation in nitrogen monthly mean.\n\nCode\n# Run regression of season component on monthly average phosphorus\nphos_season_reg &lt;- lm(monthly_avg ~ season_year, data = phos_decomp)\n\n# Print the formatted regression table\nstargazer(phos_season_reg, title = \"Regression of monthly phosphorus concentration against seasonal trend component\", align = TRUE, digits = 3, type = 'html', notes.append = FALSE, notes = \"[***]p&lt;0.01\")\n\n\n\n\nRegression of monthly phosphorus concentration against seasonal trend component\n\n\n\n\n\n\n\n\n\nDependent variable:\n\n\n\n\n\n\n\n\n\n\n\n\nmonthly_avg\n\n\n\n\n\n\n\n\nseason_year\n\n\n0.984***\n\n\n\n\n\n\n(0.051)\n\n\n\n\n\n\n\n\n\n\nConstant\n\n\n0.057***\n\n\n\n\n\n\n(0.001)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObservations\n\n\n120\n\n\n\n\nR2\n\n\n0.759\n\n\n\n\nAdjusted R2\n\n\n0.757\n\n\n\n\nResidual Std. Error\n\n\n0.006 (df = 118)\n\n\n\n\nF Statistic\n\n\n371.062*** (df = 1; 118)\n\n\n\n\n\n\n\n\nNote:\n\n\n[***]p&lt;0.01\n\n\n\n\nFor phosphorus, adjusted R-squared of this regression is 0.76, confirming our idea that seasonality is more pronounced with phosphorus.\n\nCode\n# Run regression of year-month on trend component for nitrogen\nnitr_trend_reg &lt;- lm(trend ~ yr_mo, data = nitr_decomp)\n\n# Print the formatted regression table\nstargazer(nitr_trend_reg, title = \"Regression of nitrogen non-seasonal trend component against year-month\", align = TRUE, digits = 3, type = 'html', notes.append = FALSE, notes = \"[***]p&lt;0.01\")\n\n\n\n\nRegression of nitrogen non-seasonal trend component against year-month\n\n\n\n\n\n\n\n\n\nDependent variable:\n\n\n\n\n\n\n\n\n\n\n\n\ntrend\n\n\n\n\n\n\n\n\nyr_mo\n\n\n-0.00001***\n\n\n\n\n\n\n(0.00000)\n\n\n\n\n\n\n\n\n\n\nConstant\n\n\n1.121***\n\n\n\n\n\n\n(0.079)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObservations\n\n\n120\n\n\n\n\nR2\n\n\n0.065\n\n\n\n\nAdjusted R2\n\n\n0.057\n\n\n\n\nResidual Std. Error\n\n\n0.055 (df = 118)\n\n\n\n\nF Statistic\n\n\n8.176*** (df = 1; 118)\n\n\n\n\n\n\n\n\nNote:\n\n\n[***]p&lt;0.01\n\n\n\n\n\n\nCode\n# Compute the confidence interval for the coefficient of yr_mo\n# Multiply by 120 to estimate 10-year change in trend component\nnitr_trend_10_yr &lt;- 120 * confint(nitr_trend_reg, \"yr_mo\")\ncat('95% confidence interval for 10-year change in nitrogen non-seasonal trend component:',\n    '\\n[',\n    sprintf(\"%.4f\", nitr_trend_10_yr[1]),\n    ',',\n    sprintf(\"%.4f\", nitr_trend_10_yr[2]),\n    ']')\n\n\n95% confidence interval for 10-year change in nitrogen non-seasonal trend component: \n[ -0.0028 , -0.0005 ]\n\n\n\n\nCode\n# Convert to percent change since January 2010 observation\nnitr_percent_trend_10_yr &lt;- (nitr_trend_10_yr / nitr_decomp$trend[1]) * 100\ncat('95% confidence interval for 10-year percent change in nitrogen non-seasonal trend component:',\n    '\\n[',\n    sprintf(\"%.2f\", nitr_percent_trend_10_yr[1]),\n    ',',\n    sprintf(\"%.2f\", nitr_percent_trend_10_yr[2]),\n    ']')\n\n\n95% confidence interval for 10-year percent change in nitrogen non-seasonal trend component: \n[ -0.28 , -0.05 ]\n\n\nIn this linear regression, we look at the influence of year-month on our non-seasonal trend component for nitrogen. The regression output tells us that we can say at an alpha equals 0.01 significance level that the 10-year change in non-seasonal trend component was negative. However, the low adjusted R-squared also tells us that variation in year-month explains very little of the variation in trend component. Then, the first interval tells us that there is a 95% chance that the interval from -0.0028 mg/L to -0.0005 mg/L contains the true 10-year change in non-seasonal trend component. The second interval is telling us that this represents a -0.28% to -0.05% change as compared to the non-seasonal trend component in January 2010.\n\nCode\n# Run regression of year-month on trend component for phosphorus\nphos_trend_reg &lt;- lm(trend ~ yr_mo, data = phos_decomp)\n\n# Print the formatted regression table\nstargazer(phos_trend_reg, title = \"Regression of phosphorus non-seasonal trend component against year-month\", align = TRUE, digits = 3, type = 'html', notes.append = FALSE, notes = \"[***]p&lt;0.01\")\n\n\n\n\nRegression of phosphorus non-seasonal trend component against year-month\n\n\n\n\n\n\n\n\n\nDependent variable:\n\n\n\n\n\n\n\n\n\n\n\n\ntrend\n\n\n\n\n\n\n\n\nyr_mo\n\n\n-0.00000***\n\n\n\n\n\n\n(0.00000)\n\n\n\n\n\n\n\n\n\n\nConstant\n\n\n0.092***\n\n\n\n\n\n\n(0.003)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObservations\n\n\n120\n\n\n\n\nR2\n\n\n0.565\n\n\n\n\nAdjusted R2\n\n\n0.561\n\n\n\n\nResidual Std. Error\n\n\n0.002 (df = 118)\n\n\n\n\nF Statistic\n\n\n153.180*** (df = 1; 118)\n\n\n\n\n\n\n\n\nNote:\n\n\n[***]p&lt;0.01\n\n\n\n\n\n\nCode\n# Compute the confidence interval for the coefficient of yr_mo\n# Multiply by 120 to estimate 10-year change in trend component\nphos_trend_10_yr &lt;- 120 * confint(phos_trend_reg, \"yr_mo\")\ncat('95% confidence interval for 10-year change in phosphorus non-seasonal trend component:',\n    '\\n[',\n    sprintf(\"%.5f\", phos_trend_10_yr[1]),\n    ',',\n    sprintf(\"%.5f\", phos_trend_10_yr[2]),\n    ']')\n\n\n95% confidence interval for 10-year change in phosphorus non-seasonal trend component: \n[ -0.00030 , -0.00022 ]\n\n\n\n\nCode\n# Convert to percent change since January 2010 observation\nphos_percent_trend_10_yr &lt;- (phos_trend_10_yr / phos_decomp$trend[1]) * 100\ncat('95% confidence interval for 10-year percent change in phosphorus non-seasonal trend component:',\n    '\\n[',\n    sprintf(\"%.2f\", phos_percent_trend_10_yr[1]),\n    ',',\n    sprintf(\"%.2f\", phos_percent_trend_10_yr[2]),\n    ']')\n\n\n95% confidence interval for 10-year percent change in phosphorus non-seasonal trend component: \n[ -0.52 , -0.38 ]\n\n\nFor phosphorus, the linear regression output tells us that we are confident at the alpha equals 0.01 level that the 10-year change in non-seasonal trend component was negative. It is also worth noting that the adjusted R-squared tells us that over half (56%) of the the variation in trend component can be explained by variation in year-month. Lastly, we find that there is a 95% chance that the interval between -0.00030 mg/L and -0.00022 mg/L contains the true 10-year change in non-seasonal trend component. This represents a -0.52% to -0.38% change as compared to the non-seasonal trend component in January 2010."
  },
  {
    "objectID": "blog/2023-12-12-post/index.html#conclusion",
    "href": "blog/2023-12-12-post/index.html#conclusion",
    "title": "Time series analysis of nutrient pollution in Chesapeake Bay tidal regions",
    "section": "Conclusion",
    "text": "Conclusion\nMy time series analysis suggests that seasonality plays a substantial role in contributing to variation in the monthly mean concentration of nitrogen and phosphorus in tidal regions of the Chesapeake Bay. For nitrogen, seasonal trends explained 55% of the variation in monthly means, and the relationship was even stronger for phosphorus, with seasonal trends explaining 76% of the variation. While the seasonal component for nitrogen was highest during Winter, the seasonal component for phosphorus was highest during Summer.\nThis analysis was also interested in any non-seasonal trend that has occurred since the introduction of TMDL requirements in 2010. For both nitrogen and phosphorus, we find evidence at an alpha level of 0.01 that the 10-year change in non-seasonal trend is negative. However, our confidence intervals suggest that, for both nutrient pollutants, these changes in trend represent a less than 1% decrease in concentration over the decade. It was also notable how the non-seasonal trend was much more consistent for phosphorus than nitrogen. This can be seen in our STL visualization and is also reflected by the larger adjusted R-squared for phosphorus (0.56) compared to nitrogen (0.06) computed in the linear regression of non-seasonal trend component against year-month.\nThe main limitation of this analysis was that no form of spatial interpolation was employed to estimate concentrations across the tidal region based on the location of measurements. It would be interesting to compare such an analysis to what we did here, as any significant differences would imply that sampled areas are not spread throughout the region in a representative manner. Further analysis might also investigate what happened at the beginning of 2014 that could have led to the high spike in nitrogen levels at that time, in addition to factors that might have fueled the increase seen over the course of 2018."
  },
  {
    "objectID": "blog/2023-12-11-post/mt-whitney-land-cover.html#read-in-data",
    "href": "blog/2023-12-11-post/mt-whitney-land-cover.html#read-in-data",
    "title": "Land cover analysis around Mount Whitney",
    "section": "1) Read in data",
    "text": "1) Read in data\n\nUSGS land cover raster dataset\nThe primary dataset that we will be working with comes from the 2011 National Terrestrial Ecosystems data, which was collected as part of the USGS Gap Analysis Project (GAP) by the U.S. Forest Service and Department of the Interior (U.S. Geological Survey 2016). For the purposes of this analysis, the full, nationwide dataset was pre-processed in Microsoft Planetary Computer to only include the area around Mount Whitney. With 30 meter by 30 meter pixel resolution, this raster dataset is a TIF file and contains numbers representing land cover classification.\n\n\nCode\nimport os\nimport xarray as xr\nimport rioxarray as rioxr\n\n# Import land cover TIF as xarray.DataArray\nlulc_fp = os.path.join(os.getcwd(),'..','..','data','2023-12-11-post-data','land_cover.tif')\nlulc = rioxr.open_rasterio(lulc_fp)\n\n\n\n\nUSGS land cover tabular dataset\nOur second dataset is also from the 2011 National Terrestrial Ecosystems data and helps us make sense of values in the raster dataset. This tabular dataset is a CSV file and has the land cover classification names associated with each code used in the raster dataset. This dataset was accessed from the same online source as the raster dataset (U.S. Geological Survey 2016).\n\n\nCode\nimport pandas as pd\n\n# Import accompanying CSV as pandas.DataFrame\nclass_names = pd.read_csv('../../data/2023-12-11-post-data/GAP_National_Terrestrial_Ecosystems.csv')\n\n\n\n\nShapefile of California geographic boundaries\nThe final dataset that we will be using is a shapefile of California geographic boundaries, included in the U.S. Census Bureau’s 2016 Topologically Integrated Geographic Encoding and Referencing (TIGER) database (California Open Data 2019). We will use this shapefile to plot our basemap when visualizing our area of analysis.\n\n\nCode\nimport pandas as pd\nimport geopandas as gpd\n\n# Import CA shapefile as geopandas.GeoDataFrame\nca = gpd.read_file('https://data.ca.gov/dataset/e212e397-1277-4df3-8c22-40721b095f33/resource/3db1e426-fb51-44f5-82d5-a54d7c6e188b/download/ca-state-boundary.zip')"
  },
  {
    "objectID": "blog/2023-12-13-post/index.html",
    "href": "blog/2023-12-13-post/index.html",
    "title": "Reproducible workflow to gauge suitability of species for U.S. West Coast marine aquaculture",
    "section": "",
    "text": "Marine aquaculture has the potential to be an important solution to meet the future demand for protein-rich food while simultaneously ensuring environmental sustainability (Costello et al. 2020). Increases in the demand for seafood have already resulted in an industry shift from wild fisheries to terrestrial aquaculture, with farmed seafood products currently making up about 50% of the global seafood supply. However, concerns about the sustainability of further expanding terrestrial aquaculture suggest that increasing the development of marine aquaculture farms might play a substantial role in a comprehensive solution.\nFurthermore, the U.S. West Coast represents an area where such marine aquaculture expansion could take place. In fact, the State of Washington currently leads the nation in marine aquaculture development. From 2005 to 2018, Washington generated over $200 million from these sea-based farms, about 40% of nationwide revenue during that same period (Froehlich et al. 2022).\nThis analysis seeks to build on knowledge regarding the potential for marine aquaculture expansion in the four Exclusive Economic Zones (EEZs) adjacent to the U.S. West Coast. Using raster data on mean sea surface temperature and depth, I’ll estimate the total and percent area within each of these four EEZs that would be suitable for oyster aquaculture. After visualizing oyster suitability, I’ll create a generalized model that can be used for any species based on their ideal temperature and depth ranges."
  },
  {
    "objectID": "blog/2023-12-13-post/index.html#purpose",
    "href": "blog/2023-12-13-post/index.html#purpose",
    "title": "Reproducible workflow to gauge suitability of species for U.S. West Coast marine aquaculture",
    "section": "Purpose",
    "text": "Purpose\nMarine aquaculture has the potential to be an important solution to meet the future demand for protein-rich food while simultaneously ensuring environmental sustainability (Costello et al. 2020). Increases in the demand for seafood have already resulted in an industry shift from wild fisheries to terrestrial aquaculture, with farmed seafood products currently making up about 50% of the global seafood supply. However, concerns about the sustainability of further expanding terrestrial aquaculture suggest that increasing the development of marine aquaculture farms might play a substantial role in a comprehensive solution.\nFurthermore, the U.S. West Coast represents an area where such marine aquaculture expansion could take place. In fact, the State of Washington currently leads the nation in marine aquaculture development. From 2005 to 2018, Washington generated over $200 million from these sea-based farms, about 40% of nationwide revenue during that same period (Froehlich et al. 2022).\nThis analysis seeks to build on knowledge regarding the potential for marine aquaculture expansion in the four Exclusive Economic Zones (EEZs) adjacent to the U.S. West Coast. Using raster data on mean sea surface temperature and depth, I’ll estimate the total and percent area within each of these four EEZs that would be suitable for oyster aquaculture. After visualizing oyster suitability, I’ll create a generalized model that can be used for any species based on their ideal temperature and depth ranges."
  },
  {
    "objectID": "blog/2023-12-13-post/index.html#load-required-r-packages",
    "href": "blog/2023-12-13-post/index.html#load-required-r-packages",
    "title": "Reproducible workflow to gauge suitability of species for U.S. West Coast marine aquaculture",
    "section": "Load required R packages",
    "text": "Load required R packages\n\n\nCode\n# Load required packages\nlibrary(sf)\nlibrary(terra)\nlibrary(here)\nlibrary(dplyr)\nlibrary(raster)\nlibrary(tmap)\nlibrary(spData)"
  },
  {
    "objectID": "blog/2023-12-13-post/index.html#read-in-data",
    "href": "blog/2023-12-13-post/index.html#read-in-data",
    "title": "Reproducible workflow to gauge suitability of species for U.S. West Coast marine aquaculture",
    "section": "Read in data",
    "text": "Read in data\n\n2008-2012 global sea surface temperature TIFs (1 km grid cells)\nFor temperature, we will use a stacked 1 km by 1 km gridded raster with data collected by the National Oceanic and Atmospheric Association (National Oceanic and Atmospheric Association (NOAA) 2018). There are a total of five layers, one for each year from 2008 through 2012. The values in each grid cell correspond to the area’s mean sea surface temperature for that year.\n\n\nCode\n# Store list of SST tif files\nsst_files &lt;- list.files(here(\"data/2023-12-13-post-data\"), pattern = \"\\\\d\\\\.tif$\", full.names = TRUE)\n\n# Store first raster to use as reference raster\nreference_raster &lt;- raster(sst_files[1])\n\n# Create an empty list\nsst_processed &lt;- list()\n\n# Loop through each raster file\nfor (file in sst_files) {\n  # Read the raster\n  r &lt;- raster(file)\n  # Resample the raster using the reference raster\n  r_resampled &lt;- resample(r, reference_raster)\n  # Crop the raster using the extent of reference raster\n  r_cropped &lt;- crop(r_resampled, extent(reference_raster))\n  # Add the processed raster to the list\n  sst_processed[[file]] &lt;- r_cropped\n}\n\n# Stack the processed rasters\nsst_stacked &lt;- stack(sst_processed)\n\n# Create new SST raster for mean SST from 2008 to 2012\nmean_sst &lt;- mean(sst_stacked, na.rm = TRUE)\n\n# Convert SST data from Kelvin to Celsius\nmean_sst &lt;- mean_sst - 273.15\n\n\n\n\n2022 global Bathymetry TIF (1 meter grid cells)\nThe bathymetry raster that we will be using characterizes ocean depth at a spatial resolution of 1 meter grid cells. We get this data from the General Bathymetric Chart of the Oceans (General Bathymetric Chart of the Oceans (GEBCO) 2023).\n\n\nCode\n# Load bathymetry raster\ndepth &lt;- raster(here(\"data/2023-12-13-post-data/depth.tif\"))\n\n# Resample the depth data to match the resolution of SST data\ndepth &lt;- resample(depth, mean_sst, method = \"ngb\")\n\n\n\n\nShapefile for West Coast EEZs\nThis data comes from Marine Regions, which is managed by the Flanders Marine Institute (Marine Regions, n.d.).\n\n\nCode\n# Load shapefile for West Coast EEZ\neez &lt;- st_read(here(\"data/2023-12-13-post-data/wc_regions_clean.shp\"))\n\n\nReading layer `wc_regions_clean' from data source \n  `/Users/linusghanadan/Documents/MEDS/other/linusghanadan.github.io/data/2023-12-13-post-data/wc_regions_clean.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -129.1635 ymin: 30.542 xmax: -117.097 ymax: 49.00031\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "blog/2023-12-13-post/index.html#process-data",
    "href": "blog/2023-12-13-post/index.html#process-data",
    "title": "Reproducible workflow to gauge suitability of species for U.S. West Coast marine aquaculture",
    "section": "Process data",
    "text": "Process data"
  },
  {
    "objectID": "blog/2023-12-13-post/index.html#oyster-suitability-analysis",
    "href": "blog/2023-12-13-post/index.html#oyster-suitability-analysis",
    "title": "Reproducible workflow to gauge suitability of species for U.S. West Coast marine aquaculture",
    "section": "Oyster suitability analysis",
    "text": "Oyster suitability analysis\nNow that we have processed the data, we can move on to figuring out where oyster aquaculture is suitable in West Coast EEZs. Oysters generally reside in waters with a sea surface temperature of 11 to 30 degrees Celsius and at a depth of 0 to 70 meters below sea level (Froese and Pauly 2023). Thus, we will use these ranges to build a suitability raster and then crop to only include areas in West Coast EEZs.\n\nCreate and crop suitability mask\n\n\nCode\n# Make binary raster with values of 1 where SST is 11-30 degrees Celsius (otherwise NA)\nrcl = matrix(c(-Inf, 11, NA,\n                 11, 30, 1, \n                 30, Inf, NA), ncol = 3, byrow = TRUE)\nsst_binary &lt;- reclassify(mean_sst, rcl = rcl)\n\n# Make binary raster with values of 1 where depth is 0-70 meters below sea level (otherwise NA)\nrcl = matrix(c(-Inf, 0, NA,\n                 0, 70, 1, \n                 70, Inf, NA), ncol = 3, byrow = TRUE)\ndepth_binary &lt;- reclassify(depth, rcl = rcl)\n\n\n# Multiply cell values in both binary rasters to create mask raster of suitable locations for oysters \noyster_mask &lt;- overlay(sst_binary, depth_binary, fun = '*')\n\n# Crop mask based on EEZ data\noyster_mask &lt;- crop(oyster_mask, eez)\n\n\n\n\nCreate cell areas raster and EEZ raster\nNext, we calculate the total number of cells that are suitable. In this case, this is equivalent to the cell areas in meters squared, as the grid cell resolution is one meter by one meter. We also convert the cell areas data and EEZ area data to raster form, so we can perform our calculation in the next step.\n\n\nCode\n# Calculate total number of cells that are suitable\ncell_areas &lt;- cellStats(oyster_mask, stat = \"sum\", na.rm = TRUE)\n\n# Create raster for cell areas and populate\ncell_areas_raster &lt;- raster(oyster_mask)\ncell_areas_raster[] &lt;- cell_areas\n\n# Convert EEZ data to raster\neez_raster &lt;- rasterize(eez, oyster_mask)\n\n\n\n\nCalculate total and percent suitable area for each EEZ\nTo calculate total and percent suitable area for each EEZ, we use the zonal() function from the raster package in R. This function allows us to calculate the sum of suitable grid cells within each EEZ, as our EEZ raster labels each grid cell as part of one of the five West Coast EEZs.\n\n\nCode\n# Calculate total suitable area within each EEZ\ntotal_suitable_area &lt;- raster::zonal(cell_areas_raster, eez_raster, fun = sum, na.rm = TRUE)\n\n# Calculate percentage of suitable area within each EEZ\npercent_suitable_area &lt;- (total_suitable_area / eez$area_m2) * 100\n\n\n\n\nVisualize results\n\n\nCode\n# Bind EEZ data with total area and percent calculations\neez_joined &lt;- cbind(eez, total_suitable_area, percent_suitable_area) %&gt;%\n  mutate(\"Suitable area (km^2)\" = value / 1000000) %&gt;%\n  mutate(\"Percent suitable\" = value.1) %&gt;% \n  dplyr::select(-value, -value.1, -zone, -zone.1)\n\n# Store polygons for U.S. West Coast States from spData package\nCA &lt;- us_states %&gt;%\n  filter(NAME == \"California\")\nOR &lt;- us_states %&gt;%\n  filter(NAME == \"Oregon\")\nWA &lt;- us_states %&gt;%\n  filter(NAME == \"Washington\")\n\n# Initialize new bbox using EEZ bbox\nbbox_new &lt;- st_bbox(eez)\n\n# Create variable for x range of bbox\nxrange &lt;- bbox_new$xmax - bbox_new$xmin\n\n# Set new x range for bbox\nbbox_new[3] &lt;- bbox_new[3] + (0.9 * xrange)\n\n# Convert bbox to sfc\nbbox_new &lt;- bbox_new %&gt;%\n  st_as_sfc()\n\n# Create plot of total suitable area for oysters in U.S. West Coast EEZs\ntotal_area_map &lt;- \n  tm_shape(eez_joined, bbox = bbox_new) +\n  tm_fill(\"Suitable area (km^2)\", palette=\"Reds\", style = \"equal\", n=6) +\n  tm_borders() +\n  tm_shape(CA) +\n  tm_borders() +\n  tm_shape(OR) +\n  tm_borders() +\n  tm_shape(WA) +\n  tm_borders() +\n  tm_compass(position = c(\"left\", \"bottom\")) +\n  tm_scale_bar(position = c(\"left\", \"bottom\")) +\n  tm_layout(title = \"Suitable area for oyster aquaculture\") +\n  tm_layout(legend.position = c(\"right\", \"center\")) +\n  tm_layout(inner.margins = 0.15)\n\n# Create plot of percent suitable area for oysters in U.S. West Coast EEZs\ntmap_mode(\"plot\")\npercent_area_map &lt;- \n  tm_shape(eez_joined, bbox = bbox_new) +\n  tm_fill(\"Percent suitable\", palette=\"BuPu\", style = \"equal\", n=6) +\n  tm_borders() +\n  tm_shape(CA) +\n  tm_borders() +\n  tm_shape(OR) +\n  tm_borders() +\n  tm_shape(WA) +\n  tm_borders() +\n  tm_compass(position = c(\"left\", \"bottom\")) +\n  tm_scale_bar(position = c(\"left\", \"bottom\")) +\n  tm_layout(title = \"Suitable area for oyster aquaculture\") +\n  tm_layout(legend.position = c(\"right\", \"center\")) +\n  tm_layout(inner.margins = 0.15)\ntmap_mode(\"plot\")\ntmap_arrange(total_area_map, percent_area_map)"
  },
  {
    "objectID": "blog/2023-12-13-post/index.html#generalized-suitability-model",
    "href": "blog/2023-12-13-post/index.html#generalized-suitability-model",
    "title": "Reproducible workflow to gauge suitability of species for U.S. West Coast marine aquaculture",
    "section": "Generalized suitability model",
    "text": "Generalized suitability model\nNow that we have performed a suitability analysis for oysters in West Coast EEZs, we can broaden our workflow by building a function that provides us the same type of data visualizations for any species based on inputs of desired range for sea surface temperature and depth. We will first build our function and then test it out using suitability parameters for the Common carp.\n\nBuild function\n\n\nCode\n# Reproducible workflow function for any species\nsuitable_aqua &lt;- function(species, tempmin, tempmax, depthmin, depthmax) {\n  rcl_fun &lt;- matrix(c(-Inf, tempmin, NA,\n                  tempmin, tempmax, 1,\n                  tempmax, Inf, NA), ncol = 3, byrow = TRUE)\n  sst_binary_fun &lt;- reclassify(mean_sst, rcl = rcl_fun)\n  rcl_fun = matrix(c(-Inf, depthmin, NA,\n                 depthmin, depthmax, 1, \n                 depthmax, Inf, NA), ncol = 3, byrow = TRUE)\n  depth_binary_fun &lt;- reclassify(depth, rcl = rcl_fun)\n  raster_mask_fun &lt;- overlay(sst_binary_fun, depth_binary_fun, fun = '*')\n  raster_mask_fun &lt;- crop(raster_mask_fun, eez)\n  if (all(unique(raster_mask_fun) %in% c(1, NA))) {\n  } else {stop(\"Error in code. Mask contains values other than 1 or NA.\")}\n  cell_areas_fun &lt;- cellStats(raster_mask_fun, stat = \"sum\", na.rm = TRUE)\n  cell_areas_raster_fun &lt;- raster(raster_mask_fun)\n  cell_areas_raster_fun[] &lt;- cell_areas_fun\n  eez_raster_fun &lt;- rasterize(eez, raster_mask_fun)\n  total_suitable_area_fun &lt;- zonal(cell_areas_raster_fun, eez_raster_fun, fun = sum, na.rm = TRUE)\n  percent_suitable_area_fun &lt;- (total_suitable_area_fun / eez$area_m2) * 100\n  eez_joined_fun &lt;- cbind(eez, total_suitable_area_fun, percent_suitable_area_fun) %&gt;%\n    mutate(\"Suitable area (km^2)\" = value / 1000000) %&gt;%\n    mutate(\"Percent suitable\" = value.1) %&gt;% \n    dplyr::select(-value, -value.1, -zone, -zone.1)\n  if (any(eez_joined_fun$`Percent suitable` &lt; 0 | eez_joined_fun$`Percent suitable` &gt; 100)) {\n    stop(\"Error in code. At least one percent area is not between 0 and 100.\")\n  } else {}\n  CA &lt;- us_states %&gt;%\n    filter(NAME == \"California\")\n  OR &lt;- us_states %&gt;%\n    filter(NAME == \"Oregon\")\n  WA &lt;- us_states %&gt;%\n    filter(NAME == \"Washington\")\n  bbox_new_fun &lt;- st_bbox(eez)\n  xrange_fun &lt;- bbox_new_fun$xmax - bbox_new_fun$xmin\n  bbox_new_fun[3] &lt;- bbox_new_fun[3] + (0.9 * xrange_fun)\n  bbox_new_fun &lt;- bbox_new_fun %&gt;%\n    st_as_sfc()\n  total_area_map_fun &lt;-\n    tm_shape(eez_joined_fun, bbox = bbox_new_fun) +\n    tm_fill(\"Suitable area (km^2)\", palette=\"Reds\", style = \"equal\", n=6) +\n    tm_borders() +\n    tm_shape(CA) +\n    tm_borders() +\n    tm_shape(OR) +\n    tm_borders() +\n    tm_shape(WA) +\n    tm_borders() +\n    tm_compass(position = c(\"left\", \"bottom\")) +\n    tm_scale_bar(position = c(\"left\", \"bottom\")) +\n    tm_layout(title = paste(\"Suitable area for\", species,\"aquaculture\")) +\n    tm_layout(legend.position = c(\"right\", \"center\")) +\n    tm_layout(inner.margins = 0.15)\n  percent_area_map_fun &lt;- \n    tm_shape(eez_joined_fun, bbox = bbox_new_fun) +\n    tm_fill(\"Percent suitable\", palette=\"BuPu\", style = \"equal\", n=6) +\n    tm_borders() +\n    tm_shape(CA) +\n    tm_borders() +\n    tm_shape(OR) +\n    tm_borders() +\n    tm_shape(WA) +\n    tm_borders() +\n    tm_compass(position = c(\"left\", \"bottom\")) +\n    tm_scale_bar(position = c(\"left\", \"bottom\")) +\n    tm_layout(title = paste(\"Suitable area for\", species,\"aquaculture\")) +\n    tm_layout(legend.position = c(\"right\", \"center\")) +\n    tm_layout(inner.margins = 0.15)\n  return(tmap_arrange(total_area_map_fun, percent_area_map_fun))}\n\n\n\n\nUse function to analyze suitable area for Common carp\nCompared to oysters, the Common carp can handle slightly more extreme temperatures (3 to 35 degrees Celsius) (Froese and Pauly 2023). However, unlike oysters who thrive in depths of up to 70 meters below sea level, the Common carp can only handle up to 29 meters. We can apply our generalized function to see what this means in term of how suitability differs for the Common carp.\n\n\nCode\n# Run function for Common carp species\nsuitable_aqua(\"Common carp\", tempmin=3, tempmax=35, depthmin=0, depthmax=29)\n\n\n\n\n\nThe two maps are very similar in terms of how the different EEZs compare to each other, but a closer inspection of the legend values does show us that the Common carp has a consistently higher amount of suitable area. Hence, the larger temperature range was more important for suitability than the narrower depth range."
  },
  {
    "objectID": "blog/2023-12-13-post/index.html#conclusions",
    "href": "blog/2023-12-13-post/index.html#conclusions",
    "title": "Reproducible workflow to gauge suitability of species for U.S. West Coast marine aquaculture",
    "section": "Conclusions",
    "text": "Conclusions"
  },
  {
    "objectID": "blog/2023-12-12-post/index.html#exploratory-analysis",
    "href": "blog/2023-12-12-post/index.html#exploratory-analysis",
    "title": "Time series analysis of nutrient pollution in Chesapeake Bay tidal regions",
    "section": "Exploratory analysis",
    "text": "Exploratory analysis\nTo get an idea of what is going on with the data, we’ll first calculate moving averages for each year-month, storing the resulting output as both a tsibble and data.frame. We’ll plot these moving averages just to get a general idea of what types of trends we might be looking at.\n\n\nCode\n# Compute nitrogen monthly moving average, and store as tsibble\nnitr_monthly_avgs_ts &lt;- nitr_data %&gt;% \n  mutate(yr_mo = tsibble::yearmonth(SampleDate)) %&gt;%\n  group_by(yr_mo) %&gt;%\n  summarize(monthly_avg = mean(MeasureValue, na.rm = TRUE)) %&gt;% \n  tsibble::as_tsibble()\n\n# Create data frame version, and convert year-months to Date class (helpful for plotting)\nnitr_monthly_avgs_df &lt;- as.data.frame(nitr_monthly_avgs_ts)\nnitr_monthly_avgs_df$yr_mo &lt;- as.Date(nitr_monthly_avgs_ts$yr_mo, format = \"%Y-%m\")\n\n# Plot monthly average nitrogen concentration as a function of year-month\nnitr_monthly_avgs_df %&gt;%\n  ggplot(aes(x = yr_mo, y = monthly_avg)) +\n  stat_summary(geom = 'line', fun = 'mean') +\n  labs(x = 'Year-Month', y = 'Monthly Mean Concentration (mg/L)', title = \"Nitrogen in Chesapeake Bay (2010-2019)\") +\n  scale_x_date(date_breaks = \"1 year\", date_minor_breaks = \"6 months\", date_labels = \"%Y-%m\") +\n  theme_bw() +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\nFrom this plot, there does appear to be a seasonal trend for nitrogen concentrations, but there is no clear non-seasonal trend. In addition, there is a notable spike in early 2014.\n\n\nCode\n# Compute phosphorus monthly moving average, and store as tsibble\nphos_monthly_avgs_ts &lt;- phos_data %&gt;% \n  mutate(yr_mo = tsibble::yearmonth(SampleDate)) %&gt;%\n  group_by(yr_mo) %&gt;%\n  summarize(monthly_avg = mean(MeasureValue, na.rm = TRUE)) %&gt;% \n  tsibble::as_tsibble()\n\n# Create data frame version, and convert year-months to Date class (helpful for plotting)\nphos_monthly_avgs_df &lt;- as.data.frame(phos_monthly_avgs_ts)\nphos_monthly_avgs_df$yr_mo &lt;- as.Date(phos_monthly_avgs_ts$yr_mo, format = \"%Y-%m\")\n\n# Plot monthly average phosphorus concentration as a function of year-month\nphos_monthly_avgs_df %&gt;%\n  ggplot(aes(x = yr_mo, y = monthly_avg)) +\n  stat_summary(geom = 'line', fun = 'mean') +\n  labs(x = 'Year-Month', y = 'Monthly Mean Concentration (mg/L)', title = \"Phosphorus in Chesapeake Bay (2010-2019)\") +\n  scale_x_date(date_breaks = \"1 year\", date_minor_breaks = \"6 months\", date_labels = \"%Y-%m\") +\n  theme_bw() +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\nSimilar to the nitrogen plot, phosphorus also seems to exhibit a distinct seasonal trend. Again, it is unclear whether there is a non-seasonal trend."
  },
  {
    "objectID": "blog/2023-12-13-post/index.html#conclusion",
    "href": "blog/2023-12-13-post/index.html#conclusion",
    "title": "Reproducible workflow to gauge suitability of species for U.S. West Coast marine aquaculture",
    "section": "Conclusion",
    "text": "Conclusion\nThe main takeaway from this analysis is that we were able to build a model that helps us better understand which West Coast EEZs are best suited for marine aquaculture of certain species based on ideal ranges for sea surface temperature and depth. To demonstrate how this model could be used, this analysis looked at suitability for oysters and the Common carp. Specifically, our comparison showed that having a larger temperature range (3-35 degrees Celsius for carp compared to 11-30 degrees Celsius for oysters) was more important for suitability than having a narrower depth range (0-29 meters for carp compared to 0-70 meters for oysters).\nThis being said, there are certainly limitations in using our model. For one, using a sea surface temperature raster with finer resolution would give us more precise estimates. In addition, this analysis did not look at where marine aquaculture currently exists on the West Coast. This model could be improved upon by subtracting areas that are already being used for marine aquaculture. Lastly, a more robust model would look at more variables than just sea surface temperature and depth. Further analysis might include additional water variables with conditional ranges for different species, such as degree hardness (dH) and potential of hydrogen (pH)."
  }
]
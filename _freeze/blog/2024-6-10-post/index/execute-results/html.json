{
  "hash": "9e024f81eb0c7f4e40e2a6c7e98b049d",
  "result": {
    "markdown": "---\ntitle: \"Dynamic Simulation of Forest Growth\"\ndescription: \"Using a model of forest growth, I run a 300-year continuous dynamic simulation for the forest and then conduct a global sensitivity analysis looking at variation in maximum forest size.\"\nauthor: \n  - name: Linus Ghanadan\n    url: https://linusghanadan.github.io/\n    affiliation: MEDS\n    affiliation-url: https://ucsb-meds.github.io\ndate: \"June 10, 2024\"\ncategories:\n  - [Dynamic Simulation]\n  - [Sensitivity Analysis]\n  - [R]\ncitation:\n  url: https://linusghanadan.github.io/blog/2024-6-10-post/\ndraft: false\nformat:\n    html:\n        code-fold: false\n---\n\n\n## Context\n\nThis project was completed for my Modeling Environmental Systems class, taken as part of my Master's program at UC Santa Barbara. Provided with data and questions, I carried out this analysis using appropriate modeling techniques.\n\n## Project Summary\n\nGenerated stochastic parameter sets for forest size model inputs (exponential growth rate before canopy closure, linear growth rate after canopy closure, carrying capacity, and canopy closure threshold) and used an ordinary differential equations solver to run 300-year continuous dynamic simulations of forests. Conducted global sensitivity analysis (ran 2,000 simulations and computed Sobol indices of input parameters) to look at impact of varying parameter values on maximum forest size.\n\n## [Link to GitHub Repository](https://github.com/linusghanadan/dynamic-simulation-forest-growth)\n\n## Setup\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load packages\nlibrary(tidyverse)\nlibrary(deSolve)\nlibrary(sensitivity)\n```\n:::\n\n\n## Source forest growth function\n\nFor the purposes of showing the complete documentation for the function that I am working with, I have included the full contents of the R script that was sourced when I originally conducted this analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#' Forest growth derivative\n#' @param time time since start\n#' @param C forest size (carbon)\n#' @param parms - as list with four values: r, g, K, threshold\n#' @param r exponential growth rate before canopy closure\n#' @param g linear growth rate after canopy closure\n#' @param K carrying capacity\n#' @param threshold canopy closure threshold\n#' @return derivative of forest size with time\ndforestgrowth = function(Time, C, parms) {\n  if (C < parms$threshold) {\n    dC = parms$r * C\n  } else {\n    dC = parms$g * (1 - C/parms$K)\n  }\n  return(list(dC))\n}\n```\n:::\n\n\n## Run model for 300 years (using the ODE solver)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# set number of parameters\nnp = 2000\n\n# generate parameter sets for sensitivity analysis\nr_exp = rnorm(mean = 0.01, sd = 0.002, n = np)\ng_linear = rnorm(mean = 2, sd = 0.5, n = np)\nK_capacity = rnorm(mean = 250, sd = 50, n = np)\nthreshold_closure = rnorm(mean = 50, sd = 10, n = np)\n\nX1 = cbind.data.frame(r = r_exp, g = g_linear, K = K_capacity, threshold = threshold_closure)\n\nr_exp = rnorm(mean = 0.01, sd = 0.002, n = np)\ng_linear = rnorm(mean = 2, sd = 0.5, n = np)\nK_capacity = rnorm(mean = 250, sd = 50, n = np)\nthreshold_closure = rnorm(mean = 50, sd = 10, n = np)\n\nX2 = cbind.data.frame(r = r_exp, g = g_linear, K = K_capacity, threshold = threshold_closure)\n\n# fix negative values\nX1 = X1 %>% map_df(pmax, 0.0)\nX2 = X2 %>% map_df(pmax, 0.0)\n\n# create Sobol object and get parameter sets for running model\nsens_P = sobolSalt(model = NULL, X1, X2, nboot = 300)\n\n# add names to parameter sets\ncolnames(sens_P$X) = c(\"r\", \"g\", \"K\", \"threshold\")\n\n# set initial forest size and simulation times\nCinitial = 10\nsimtimes = seq(from = 1, to = 300)\n\n# run model with first parameter set\nparms = list(r = sens_P$X[1, \"r\"], g = sens_P$X[1, \"g\"], K = sens_P$X[1, \"K\"], threshold = sens_P$X[1, \"threshold\"])\n\nresult = ode(y = Cinitial, times = simtimes, func = dforestgrowth, parms = parms)\nresult = as.data.frame(result)\ncolnames(result) = c(\"time\", \"C\")\n\n# plot results\nggplot(result, aes(time, C)) +\n  geom_line() +\n  labs(x = \"Time (years)\", y = \"Forest Size (kg C)\", title = \"Forest Growth Trajectory\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n## Conduct a global sensitivity analysis looking at variation in maximum forest size\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# function to compute maximum forest size\ncompute_max_forest_size <- function(carbontime) {\n  max_size <- max(carbontime$C)\n  return(list(max_size = max_size))\n}\n\n# set number of parameters\nnp <- 2000\n\n# generate parameter sets for sensitivity analysis\nr_exp <- rnorm(mean = 0.01, sd = 0.001, n = np)\ng_linear <- rnorm(mean = 2, sd = 0.2, n = np)\nK_capacity <- rnorm(mean = 250, sd = 25, n = np)\nthreshold_closure <- rnorm(mean = 50, sd = 5, n = np)\n\nX1 <- cbind.data.frame(r = r_exp, g = g_linear, K = K_capacity, threshold = threshold_closure)\n\nr_exp <- rnorm(mean = 0.01, sd = 0.001, n = np)\ng_linear <- rnorm(mean = 2, sd = 0.2, n = np)\nK_capacity <- rnorm(mean = 250, sd = 25, n = np)\nthreshold_closure <- rnorm(mean = 50, sd = 5, n = np)\n\nX2 <- cbind.data.frame(r = r_exp, g = g_linear, K = K_capacity, threshold = threshold_closure)\n\n# create Sobol object and get parameter sets for running model\nsens_forest <- sobolSalt(model = NULL, X1, X2, nboot = 300)\ncolnames(sens_forest$X) <- c(\"r\", \"g\", \"K\", \"threshold\")\n\n# wrapper function to run model and compute maximum forest size\np_wrapper <- function(r, g, K, threshold, Cinitial, simtimes, odefunc, metricfunc) {\n  parms <- list(r = r, g = g, K = K, threshold = threshold)\n  result <- ode(y = Cinitial, times = simtimes, func = odefunc, parms = parms)\n  result <- as.data.frame(result)\n  colnames(result) <- c(\"time\", \"C\")\n  metrics <- metricfunc(result)\n  return(metrics)\n}\n\n# set initial forest size and simulation times\nCinitial <- 10\nsimtimes <- seq(from = 1, to = 300)\n\n# run model for all parameter sets and compute maximum forest size\nallresults <- as.data.frame(sens_forest$X) %>%\n  pmap(p_wrapper, Cinitial = Cinitial, simtimes = simtimes, odefunc = dforestgrowth, metricfunc = compute_max_forest_size)\n\n# extract maximum forest size results into a data frame\nallres <- allresults %>% map_dfr(`[`, \"max_size\")\ncolnames(allres) <- \"max_size\"\n\n# create sensitivity analysis box plot\nggplot(allres, aes(x = \"All Parameter Sets\", y = max_size)) +\n  geom_boxplot(color = \"black\") +\n  labs(x = NULL, y = \"Maximum Forest Size (kg C)\", title = \"Global Sensitivity Analysis: Impact of Varying Parameters on Maximum Forest Size\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n## Compute Sobol indices\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# perform sensitivity analysis\nsens_result <- tell(sens_forest, allres$max_size)\n\n# label rows in the Sobol indices\nrownames(sens_result$S) <- c(\"r\", \"g\", \"K\", \"threshold\")\nrownames(sens_result$T) <- c(\"r\", \"g\", \"K\", \"threshold\")\n\n# print Sobol indices\nprint(sens_result)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nsobolSalt(model = NULL, X1 = X1, X2 = X2, nboot = 300)\n\nModel runs: 12000 \n\nModel variance: 237.737 \n\nFirst order indices:\n            original          bias std. error  min. c.i. max. c.i.\nr         0.33932069 -0.0004058488 0.02071218 0.29609617 0.3766200\ng         0.23768511 -0.0018132072 0.02129657 0.19740665 0.2814583\nK         0.38857803 -0.0016445038 0.02116133 0.34872668 0.4332762\nthreshold 0.08033234 -0.0009978570 0.02193401 0.03925047 0.1239420\n\nTotal indices:\n           original         bias  std. error  min. c.i.  max. c.i.\nr         0.3440581 0.0019152040 0.014939263 0.31159909 0.37196317\ng         0.2147291 0.0007112569 0.009619229 0.19315222 0.23263304\nK         0.3777235 0.0010138348 0.014965150 0.34665565 0.40510906\nthreshold 0.0659701 0.0003449452 0.003355676 0.05871958 0.07182974\n```\n:::\n:::\n\n\n## Conclusion\n\nThis sensitivity analysis suggests that the carrying capacity (K) and the pre-canopy closure growth rate (r) are the most influential parameters in determining the maximum forest size estimates. Variations in either of these parameters could lead to significant differences in the maximum size that a forest can reach. Because of this, it is crucial to have accurate estimates of all parameters, but especially K and r, so that predictions of the maximum forest size are accurate.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
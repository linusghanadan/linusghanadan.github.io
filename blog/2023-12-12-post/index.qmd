---
title: "Time series analysis of nitrogen and phosphorus concentrations in Chesapeake Bay tidal regions since 2010 introduction of TMDL requirements"
description: "This analysis seeks to better understand the seasonality of nitrogen and phosphorus concentration in Chesapeake Bay tidal regions, in addition to any non-seasonal trends over the last decade."
author: 
  - name: Linus Ghanadan
    url: https://linusghanadan.github.io/
    affiliation: MEDS
    affiliation-url: https://bren.ucsb.edu/masters-programs/master-environmental-data-science
date: 12-12-2023
categories: [Statistics]
bibliography: stats_blog.bib
citation:
  url: https://linusghanadan.github.io/blog/2023-12-12-post/
image: chesapeake-bay.jpeg
draft: false
format:
    html:
        code-fold: true
---

## Question

Since the 2010 introduction of TMDL requirements, what seasonal and non-seasonal trends are present for nitrogen and phosphorus concentrations in Chesapeake Bay tidal regions?

## Introduction

In December 2010, the EPA took an unprecedented step in enacting federal policy specific to the Chesapeake Bay, the largest estuary in the United States \[@us_environmental_protection_agency_chesapeake_2023\]. Specifically, the EPA established Total Maximum Daily Load (TMDL) requirements for the amount of nitrogen, phosphorus, and sediment that is allowed in the Bay. Nitrogen and phosphorus are the two pollutants primarily responsible for algal blooms, which cause marine dead zones through taking in dissolved oxygen and blocking sunlight. Sediment also contributes to dead zones by blocking sunlight, leading it to be included in the 2010 TMDL requirements.

This analysis will focus on nitrogen and phosphorus, the two nutrient pollutants regulated under the 2010 TMDL requirements. A 2022 study found that agricultural runoff was the largest source of nutrient pollution, accounting for 48% of nitrogen and 27% of phosphorus in the Chesapeake Bay [@chesapeake_progress_2025_nodate]. Both of these pollutants also get to the Bay as a result of urban and suburban runoff, wastewater treatment plants releasing treated water, and natural sources (i.e., runoff from forests, wetlands, etc.). In addition, about 25% of nitrogen that ends up in the Bay comes from air pollution that is originally emitted to the atmosphere by sources such as cars and factories \[@burns_atmospheric_2021\]. Through a process called atmospheric deposition, these nitrogen compounds react with other chemicals to become nitrous oxides, which can be deposited back to Earth's surface through precipitation or as dry deposition.

Through conducting a time series analysis of post-2010 nitrogen and phosphorus concentration measurements, my goal is to better understand how concentrations have changed since the introduction of TMDL requirements. I'm also interested in the nature of any seasonality and whether the three time series components (i.e., seasonal, trend, and random) are consistent across both nitrogen and phosphorus.

## Data

Yearly water quality data on the Chesapeake Bay's tidal and non-tidal regions going back to 1984 is publicly available on the Chesapeake Bay Program DataHub [@chesapeake_bay_program_datahub_traditional_nodate]. Data is organized into either Tier 1, 2, or 3 depending on how it was collected. While Tier 1 and 2 data can be collected by any interested group, Tier 3 data is collected by monitoring stations overseen by experienced professionals. Only Tier 3 data can be used for governmental regulatory assessments.

For my analysis, I will be using 2010 to 2019 Tier 3 data collected at 143 different monitoring stations positioned throughout the Chesapeake Bay tidal regions, which includes the mainstem Bay and tributary components. Across the 10 years that we are looking at, we'll have a total of 43,809 nitrogen observations and 43,590 phosphorus observations.

Below, we import the R packages used in this analysis. Then, we read in the yearly water quality data using their CBP DataHub URL. We also process the data by creating seperate data.frames for total nitrogen and phosphorus measurements.

```{r setup, include=FALSE}
# Configure code chunk settings for what to include in rendered HTML document
knitr::opts_chunk$set(include = TRUE, message = FALSE, warning = FALSE)
```

```{r}
# Import necessary R packages
library(tidyverse)
library(readxl)
library(tsibble)
library(feasts)
library(generics)

# Create a vector of data URLs
excel_urls <- c(
  'https://datahub-content.chesapeakebay.net/traditional_annual_tidal_02jun21/2019_CEDR_tidal_data_01jun21.xlsx',
  'https://datahub-content.chesapeakebay.net/traditional_annual_tidal_02jun21/2018_CEDR_tidal_data_01jun21.xlsx',
  'https://datahub-content.chesapeakebay.net/traditional_annual_tidal_02jun21/2017_CEDR_tidal_data_11oct18.xlsx',
  'https://datahub-content.chesapeakebay.net/traditional_annual_tidal_02jun21/2016_CEDR_tidal_data_15jun17.xlsx',
  'https://datahub-content.chesapeakebay.net/traditional_annual_tidal_02jun21/2015_CEDR_tidal_data_15jun17.xlsx',
  'https://datahub-content.chesapeakebay.net/traditional_annual_tidal_02jun21/2014_CEDR_tidal_data_15jun17.xlsx',
  'https://datahub-content.chesapeakebay.net/traditional_annual_tidal_02jun21/2013_CEDR_tidal_data_15jun17.xlsx',
  'https://datahub-content.chesapeakebay.net/traditional_annual_tidal_02jun21/2012_CEDR_tidal_data_15jun17.xlsx',
  'https://datahub-content.chesapeakebay.net/traditional_annual_tidal_02jun21/2011_CEDR_tidal_data_15jun17.xlsx',
  'https://datahub-content.chesapeakebay.net/traditional_annual_tidal_02jun21/2010_CEDR_tidal_data_15jun17.xlsx')

# Create a temporary directory to store downloaded files
temp_dir <- tempdir()

# Create an empty list to store data frames
dfs <- list()

# Loop through each URL, extract file name, define local file path, download file, read into R, and append to list of data frames
for (url in excel_urls) {
  file_name <- basename(url)
  local_path <- file.path(temp_dir, file_name)
  download.file(url, destfile = local_path, mode = "wb")
  wq_data <- readxl::read_excel(local_path, sheet = 1)
  dfs[[file_name]] <- wq_data
}

# Combine all data frames into a single data frame
wq_data_combined <- bind_rows(dfs)

# Wrangle data for relevant column variables, and filter for TN (total nitrogen)
nitr_data <- wq_data_combined %>%
  dplyr::select("MonitoringLocation", "SampleDate", "Parameter", "MeasureValue", "Unit", "Latitude", "Longitude") %>% 
  filter(Parameter=="TN")

# Wrangle data for relevant column variables, and filter for TP (total phosphorus)
phos_data <- wq_data_combined %>%
  dplyr::select("MonitoringLocation", "SampleDate", "Parameter", "MeasureValue", "Unit", "Latitude", "Longitude") %>% 
  filter(Parameter=="TP")

# Remove unnecessary data and values from environment
rm(wq_data, wq_data_combined, dfs)
rm(excel_urls, file_name, local_path, temp_dir, url)
```

## Exploratory analysis

To get an idea of what is going on with the data, we'll first calculate moving averages for each year-month, storing as both a tsibble and data.frame. We'll plot these moving averages just to get a general idea of what types of trends we might be looking at.

```{r}
# Compute nitrogen monthly moving average, and store as tsibble
nitr_monthly_avgs_ts <- nitr_data %>% 
  mutate(yr_mo = tsibble::yearmonth(SampleDate)) %>%
  group_by(yr_mo) %>%
  summarize(monthly_avg = mean(MeasureValue, na.rm = TRUE)) %>% 
  tsibble::as_tsibble()

# Create data frame version, and convert year-months to Date class (helpful for plotting)
nitr_monthly_avgs_df <- as.data.frame(nitr_monthly_avgs_ts)
nitr_monthly_avgs_df$yr_mo <- as.Date(nitr_monthly_avgs_ts$yr_mo, format = "%Y-%m")

# Plot monthly average nitrogen concentration as a function of year-month
nitr_monthly_avgs_df %>%
  ggplot(aes(x = yr_mo, y = monthly_avg)) +
  stat_summary(geom = 'line', fun = 'mean') +
  labs(x = 'Year-Month', y = 'Monthly Mean Concentration (mg/L)', title = "Nitrogen in Chesapeake Bay (2010-2019)") +
  scale_x_date(date_breaks = "1 year", date_minor_breaks = "6 months", date_labels = "%Y-%m") +
  theme_bw() +
  theme(plot.title = element_text(hjust = 0.5))
```

From this plot, there does appear to be a seasonal trend for nitrogen concentrations, but there is no clear non-seasonal trend. In addition, there is a notable spike in early 2014.

```{r}
# Compute phosphorus monthly moving average, and store as tsibble
phos_monthly_avgs_ts <- phos_data %>% 
  mutate(yr_mo = tsibble::yearmonth(SampleDate)) %>%
  group_by(yr_mo) %>%
  summarize(monthly_avg = mean(MeasureValue, na.rm = TRUE)) %>% 
  tsibble::as_tsibble()

# Create data frame version, and convert year-months to Date class (helpful for plotting)
phos_monthly_avgs_df <- as.data.frame(phos_monthly_avgs_ts)
phos_monthly_avgs_df$yr_mo <- as.Date(phos_monthly_avgs_ts$yr_mo, format = "%Y-%m")

# Plot monthly average phosphorus concentration as a function of year-month
phos_monthly_avgs_df %>%
  ggplot(aes(x = yr_mo, y = monthly_avg)) +
  stat_summary(geom = 'line', fun = 'mean') +
  labs(x = 'Year-Month', y = 'Monthly Mean Concentration (mg/L)', title = "Phosphorus in Chesapeake Bay (2010-2019)") +
  scale_x_date(date_breaks = "1 year", date_minor_breaks = "6 months", date_labels = "%Y-%m") +
  theme_bw() +
  theme(plot.title = element_text(hjust = 0.5))
```

Similar to the nitrogen plot, phosphorus also seems to exhibit a distinct seasonal trend. Again, it also is unclear whether there is non-seasonal trend.

## Methods

#### Autocorrelation function

The autocorrelation function calculates the correlation between the dependent variable at a given point in time and various time lags for this same variable. For us, the autocorrelation will provide us with a useful glimpse into the nature of the seasonality going on with nitrogen and phosphorus concentrations.

#### STL decomposition

As a core part of this time series analysis, I'll be constructing a seasonal-trend decomposition using locally estimated scatterplot smoothing (LOESS), which is often abbreviated as a STL decomposition model. STL allows us to separate our monthly average concentrations into three components: seasonal trend, non-seasonal trend, and remainder. Through plotting these components next to each other, we gain a more intuitive understanding on the underlying forces contributing to variation in our dependent variable, which in this case is the monthly average concentration.

As opposed to other decomposition methods, one thing that is particular to STL models is the ability to specify the length of a season. It can be helpful to adjust this input depending on our desired level of smoothing for the non-seasonal trend. We will use our results from the autocorrelation function to inform our chosen length of seasons. The autocorrelation function is useful in this context because it can tell us after how many lags we see a drop-off in correlation, indicating there is a drop in the significance of the seasonal trend.

## Results

#### Autocorrelation function

```{r}
# Plot autocorrelation function for nitrogen with lags going back three years
acf(nitr_monthly_avgs_ts, lag.max = 36, i=2)
```

(how to change lags row labels???

Looking at this autocorrelation plot for nitrogen, I see that the *t-16* lag is significant at the alpha equals 0.05 level, indicated by the black line extending beyond the blue dashed line. Meanwhile, the *t-4* lag is not statistically significant. The rest of the lags remain the same or slightly decrease when comparing from the first and second year of lags. In the third year, there is a drop off in the *t-28* lag compared to \*t-12\*, and there continues to be what seems like a marginal decrease in correlation across most lags. Considering all of this, I decided to set the seasonality of my STL model for nitrogen to 24 months.

```{r}
# Plot autocorrelation function for phosphorus with lags going back three years
acf(phos_monthly_avgs_ts, lag.max = 36, i = 2)
```

For phosphorus, there is a very consistent marginal decline for each set of lags over the course of the three years. This is good news for our STL because it means that the seasonal trend will be easier to separate from the non-seasonal trend. Like I did with nitrogen, I'm also going to use two-year seasons for phosphorus. Similar to the case with nitrogen, it seems to me like the drop-off in lag correlations from year two to year three is a bit larger than from year one to year two. This suggests that a two-year seasonal cycle will give us an informative nonseasonal-trend component that is neither too eager nor too hesitant to categorize differences as trends.

#### STL decomposition

```{r}
# Conduct STL time series analysis for nitrogen with two-year seasons, and extract components
nitr_decomp <- nitr_monthly_avgs_ts %>%
  fabletools::model(feasts::STL(monthly_avg, t.window = 24)) %>% 
  generics::components()

# Plot STL time series analysis of nitrogen concentration
autoplot(nitr_decomp) +
  labs(title = "STL Time Series Analysis of Nitrogen Concentration", x = "Year Month")
```

In this plot of the three STL components for nitrogen, it is still difficult to see a long-term trend, despite the line being fairly smooth. There does seem to be a slight downward trend until around 2018 things really begin increasing. In addition the grey bars on the left all represent the same range, implying that the remainder components contributed the most to nitrogen concentration. However, this seems to be very influenced by the high spike in 2014.

```{r}
# Conduct STL time series analysis for phosphorus with two-year seasons, and extract components
phos_decomp <- phos_monthly_avgs_ts %>%
  fabletools::model(feasts::STL(monthly_avg, t.window = 24)) %>% 
  generics::components()

# Plot STL time series analysis
autoplot(phos_decomp) +
  labs(title = "STL Time Series Analysis of Phosphorus Concentration", x = "Year Month")

```

The STL plot for phosphorus does make it seem like there is a long-term downward trend, but it is difficult to tell how significant it is because of the long grey bar, which indicates it is least influential of the three components. In this case, the grey bars show us that seasonality contributes the most to the variation in phosphorus concentration.

```{r}
# For nitrogen, plot monthly mean, seasonally adjusted monthly mean, STL seasonality, and STL trend
ggplot(nitr_monthly_avgs_df, aes(yr_mo)) +
  scale_x_date(date_breaks = "1 year", date_minor_breaks = "6 months", date_labels = "%Y-%m") +
  geom_line(aes(y=nitr_decomp$monthly_avg, color = "Monthly mean")) +
  geom_line(aes(y=nitr_decomp$season_adjust, color = "Seasonally adjusted monthly mean"), linewidth=2) +
  geom_line(aes(y=nitr_decomp$trend, color = "STL trend"), linewidth = 2) +
  geom_line(aes(y=nitr_decomp$season_year, color = "STL seasonality")) +
  labs(x = 'Year-Month',
       y = 'Concentration (mg/L)',
       title = "Nitrogen in Chesapeake Bay (2010-2019)") +
  scale_color_manual(name = "", values = c("Monthly mean" = "black", "Seasonally adjusted monthly mean" = "cornflowerblue", "STL seasonality" = "seagreen", "STL trend" = "red"), breaks = c("Monthly mean", "Seasonally adjusted monthly mean", "STL seasonality", "STL trend")) +
  theme_bw() +
  theme(legend.position = "top", plot.title = element_text(hjust = 0.5))
```

I decided to make this visualization to get a better idea of exactly how these components map on to each other. This plot seems to confirm the idea of negligible trend for nitrogen. Since the x-axis is labeled for each year here, it is also easier to see the seasonal trend. Each year, nitrogen concentrations increase sharply around December. They then peak around February to March, before decreasing substantially and reaching their minimum around July.

```{r}
# For phosphorus, plot monthly mean, seasonally adjusted monthly mean, STL seasonality, and STL trend
ggplot(phos_monthly_avgs_df, aes(yr_mo)) +
  scale_x_date(date_breaks = "1 year", date_minor_breaks = "6 months", date_labels = "%Y-%m") +
  geom_line(aes(y=phos_decomp$monthly_avg, color = "Monthly mean")) +
  geom_line(aes(y=phos_decomp$season_adjust, color = "Seasonally adjusted monthly mean"), linewidth=2) +
  geom_line(aes(y=phos_decomp$trend, color = "STL trend"), linewidth = 2) +
  geom_line(aes(y=phos_decomp$season_year, color = "STL seasonality")) +
  labs(x = 'Year-Month',
       y = 'Concentration (mg/L)',
       title = "Phosphorus in Chesapeake Bay (2010-2019)") +
  scale_color_manual(name = "", values = c("Monthly mean" = "black", "Seasonally adjusted monthly mean" = "cornflowerblue", "STL seasonality" = "seagreen", "STL trend" = "red"), breaks = c("Monthly mean", "Seasonally adjusted monthly mean", "STL seasonality", "STL trend")) +
  theme_bw() +
  theme(legend.position = "top", plot.title = element_text(hjust = 0.5))
```

Our plot for phosphorus further supports the idea that there is a slight downward trend over the ten years. If you independently trace the maximums or minimums, the line does seem to be moving downward at an oscillating but fairly consistent rate. Unlike nitrogen, phosphorus concentrations shoot up in the middle of the year around May, have a relatively flat peak lasting from June to August, and then shoot down at the end of Summer.

#### Simple linear regressions based on STL model parameters

```{r}
# Run regression of season component on monthly average nitrogen
nitr_season_reg <- lm(monthly_avg ~ season_year, data = nitr_decomp)
summary(nitr_season_reg)

```

Adjusted R-squared of 0.55 indicates that seasonal trends can explain a bit over half (55%) of the variation in nitrogen monthly mean.

```{r}
# Run regression of season component on monthly average phosphorus
phos_season_reg <- lm(monthly_avg ~ season_year, data = phos_decomp)
summary(phos_season_reg)
```

For phosphorus, adjusted R-squared of this regression is 0.76, confirming our idea that seasonality is more pronounced with phosphorus.

```{r}
# Fit the linear regression model
nitr_trend_reg <- lm(trend ~ yr_mo, data = nitr_decomp)

# Compute the confidence interval for the coefficient of yr_mo
120 * confint(nitr_trend_reg, "yr_mo") / nitr_decomp$monthly_avg[1]
```

```{r}
# Fit the linear regression model
phos_trend_reg <- lm(trend ~ yr_mo, data = phos_decomp)

# Compute the confidence interval for the coefficient of yr_mo
120 * confint(phos_trend_reg, "yr_mo") / phos_decomp$monthly_avg[1]
```

## Conclusion

My time series analysis suggests that seasonality plays a substantial role in contributing to variation in the monthly mean concentration of nitrogen and phosphorus in tidal regions of the Chesapeake Bay. For nitrogen, seasonal trends explained 55% of the variation in monthly means, and the relationship was even stronger for phosphorus, with seasonal-trends explaining 76% of the variation. As for non-seasonal trends,

The main limitation of this analysis was that no form of spatial interpolation was employed to estimate concentrations across the tidal region based on location of measurements. It would be interesting to compare such an analysis to what we did here, as a significant differences might indicate that sampled areas are not spread throughout the region in a representative manner. Further analysis might also investigate what happened at the beginning of 2014 that could have led to the high spike in nitrogen levels at that time, in addition to factors that might have fueled the gradual increase seen over the course of 2018.
